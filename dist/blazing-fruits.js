(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){
/**
 * Created by tarasg on 10/6/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const counter_1 = require("../Utils/counter");
const main_1 = require("../main");
class BonusFinalResultWindow {
    constructor(scene, textStyle, x, y, resources, sound, x_delta = 0) {
        this.totalWin = 0;
        // enabled_img, dis_img, pressed_img:  PIXI.Textutre or string url to the image
        this.x = x;
        this.y = y;
        this.textStyle = textStyle;
        this.sound = sound;
        this.scene = scene;
        this.resources = resources;
        this.fieldContainer = new PIXI.Container();
        this.fieldContainer.x = x;
        this.fieldContainer.y = y;
        this.fieldContainer.visible = false;
        this.sprite = new PIXI.Sprite(resources.dialog_box.texture);
        this.fieldContainer.addChild(this.sprite);
        // bonus win text image
        this.textSprite = new PIXI.Sprite(resources.dialog_bonus_win.texture);
        this.textSprite.anchor.set(0.5, 0.5);
        this.textSprite.x = this.sprite.width / 2;
        this.textSprite.y = (this.sprite.height / 6) * 2;
        this.fieldContainer.addChild(this.textSprite);
        // add text
        this.text = new PIXI.Text('', this.textStyle);
        this.fieldContainer.addChild(this.text);
        this.text.anchor.set(0.5, 0.5);
        this.text.x = this.sprite.width / 2 + x_delta;
        this.text.y = (this.sprite.height / 6) * 4;
        this.scene.addChild(this.fieldContainer);
        // counter
        this.counter = new counter_1.CountUp(this.text, 0.0, 0.0, 2, 3, {});
        this.counter.callback = function () {
            let finalCounterEnd = new CustomEvent('finalCounterEnd');
            document.dispatchEvent(finalCounterEnd);
        };
        this.sprite.model = this;
    }
    addValue(value) {
        this.counter.update(this.counter.endVal + value);
    }
    substractValue(value) {
        this.counter.updateStack(this.counter.endVal - value);
    }
    countTill(value) {
        this.counter.update(value);
    }
    hide() {
        this.fieldContainer.visible = false;
        this.fieldContainer.y = 0 - this.sprite.height;
        this.countTill(0);
    }
    show() {
        this.fieldContainer.visible = true;
        main_1.app.ticker.add(showAnim, this);
        function showAnim(timedelta) {
            if (this.fieldContainer.y < (this.scene.sceneBackground.height / 2 - this.sprite.height / 2)) {
                this.fieldContainer.y = Math.min((this.fieldContainer.y + 20 * timedelta), (this.scene.sceneBackground.height / 2 - this.sprite.height / 2));
            }
            else {
                main_1.app.ticker.remove(showAnim, this);
                setTimeout(function () {
                    this.countTill(this.totalWin);
                }.bind(this), 1000);
            }
        }
    }
    pumpAnim() {
        let directionUp = true;
        let countCycle = 0;
        main_1.app.ticker.add(pumpAmount, this);
        function pumpAmount(timedelta) {
            if (this.text.scale.x < 1.2 && directionUp) {
                this.text.scale.x = Math.min(this.text.scale.x + (0.01 * timedelta), 1.2);
                this.text.scale.y = Math.min(this.text.scale.y + (0.01 * timedelta), 1.2);
            }
            else if (this.text.scale.x == 1.2 && directionUp) {
                directionUp = false;
            }
            else {
                this.text.scale.x = Math.max(this.text.scale.x - (0.01 * timedelta), 1);
                this.text.scale.y = Math.max(this.text.scale.y - (0.01 * timedelta), 1);
                if (this.text.scale.x == 1 && countCycle == 5) {
                    let Event = new CustomEvent('pumpWinAmountEnd');
                    document.dispatchEvent(Event);
                    main_1.app.ticker.remove(pumpAmount, this);
                }
                else if (this.text.scale.x == 1) {
                    countCycle++;
                    directionUp = true;
                }
            }
        }
    }
}
exports.BonusFinalResultWindow = BonusFinalResultWindow;

},{"../Utils/counter":25,"../main":28}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fontStyles_1 = require("../Utils/fontStyles");
const helperFuncs_1 = require("../Utils/helperFuncs");
const counter_1 = require("../Utils/counter");
const animation_objects_1 = require("../Utils/animation_objects");
const main_1 = require("../main");
let typeMap = [
    { 'sheet': 'wmBonusBurn', 'frames': animation_objects_1.waterm_anim_obj },
    { 'sheet': 'plumBonusBurn', 'frames': animation_objects_1.plum_anim_obj },
    { 'sheet': 'orangeBonusBurn', 'frames': animation_objects_1.orange_anim_obj },
    { 'sheet': 'lemonBonusBurn', 'frames': animation_objects_1.lemon_anim_obj },
    { 'sheet': 'cherryBonusBurn', 'frames': animation_objects_1.cherry_anim_obj }
];
class FruitObject {
    constructor(scene, x, y, id, type, resources) {
        this.fruitWidth = 240;
        this.fruitHeight = 225;
        this.result = 500;
        this.x = x;
        this.y = y;
        this.id = id;
        this.fruitType = type;
        this.scene = scene;
        this.resources = resources;
        this.selected = false;
        this.fruitContainer = new PIXI.Container();
        this.fruitContainer.x = x;
        this.fruitContainer.y = y;
        // create textures:
        let DisabledFruitsBase = PIXI.BaseTexture.fromImage(resources.bonus_symbols_disabled.url), EnabledFruitsBase = PIXI.BaseTexture.fromImage(resources.bonus_symbols.url), MissedFruitsBase = PIXI.BaseTexture.fromImage(resources.bonus_symbols_missed.url), OverFruitsBase = PIXI.BaseTexture.fromImage(resources.bonus_symbols_over.url);
        let fruitRect = new PIXI.Rectangle(0, this.fruitHeight * this.fruitType, this.fruitWidth, this.fruitHeight);
        this.symbolDisable = new PIXI.Texture(DisabledFruitsBase, fruitRect);
        this.symbolEnable = new PIXI.Texture(EnabledFruitsBase, fruitRect);
        this.symbolMissed = new PIXI.Texture(MissedFruitsBase, fruitRect);
        this.symbolOver = new PIXI.Texture(OverFruitsBase, fruitRect);
        // Symbol
        this.symbol = new PIXI.Sprite(this.symbolDisable);
        this.symbol.anchor.set(0.5, 0.5);
        this.symbol.x = this.fruitWidth / 2;
        this.symbol.y = this.fruitHeight / 2;
        this.symbol.interactive = false;
        this.symbol.buttonMode = true;
        this.symbol.on('pointerdown', this.onUserClick.bind(this));
        this.fruitContainer.addChild(this.symbol);
        // Text
        this.amount = new PIXI.Text('', fontStyles_1.FontStyles.counterFont);
        this.amount.visible = false;
        this.amount.anchor.set(0.5, 0.5);
        this.amount.x = this.symbol.x;
        this.amount.y = this.symbol.y;
        this.fruitContainer.addChild(this.amount);
        // Burn Animation
        let animUrl = this.resources[typeMap[this.fruitType].sheet].url, animFrames = typeMap[this.fruitType].frames;
        this.burnAnimation = helperFuncs_1.CreateAnimation(PIXI.BaseTexture.fromImage(animUrl), animFrames);
        this.burnAnimation.anchor.set(0.5, 0.5);
        this.burnAnimation.x = this.symbol.x - 5;
        this.burnAnimation.y = this.symbol.y - 20;
        this.burnAnimation.visible = false;
        this.burnAnimation.loop = false;
        this.burnAnimation.onComplete = this.onBurnComplete.bind(this);
        this.fruitContainer.addChild(this.burnAnimation);
        // Collect
        this.collectSelected = resources.collect_bonus.texture;
        this.collectMissed = resources.collect_bonus_missed.texture;
        this.collect = new PIXI.Sprite(this.collectSelected);
        this.collect.anchor.set(0.5, 0.5);
        this.collect.x = this.symbol.x;
        this.collect.y = this.symbol.y;
        this.collect.visible = false;
        this.fruitContainer.addChild(this.collect);
        // Count Up Result
        this.amount = new PIXI.Text('', fontStyles_1.FontStyles.counterFont);
        this.amount.anchor.set(0.5, 0.5);
        this.amount.x = this.symbol.x;
        this.amount.y = this.symbol.y;
        this.amount.visible = false;
        this.counter = new counter_1.CountUp(this.amount, 0.0, 0.0, 2, 0.5, {});
        this.counter.start(function () {
            let event = new CustomEvent('FruitCounterEnded', { 'detail': { 'result': this.result } });
            document.dispatchEvent(event);
        }.bind(this));
        this.fruitContainer.addChild(this.amount);
        this.scene.addChild(this.fruitContainer);
    }
    onUserClick() {
        this.symbol.visible = false;
        this.amount.visible = false;
        this.selected = true;
        let userChoose = new CustomEvent('userChoose');
        document.dispatchEvent(userChoose);
        this.burnAnimation.visible = true;
        this.burnAnimation.play();
    }
    onBurnComplete() {
        this.burnAnimation.stop();
        this.burnAnimation.visible = false;
        this.showResult();
    }
    showResult() {
        let userShowBonusResult = new CustomEvent('showResults');
        document.dispatchEvent(userShowBonusResult);
        if (this.result == 0) {
            this.collect.texture = this.collectSelected;
            this.collect.visible = true;
            let collectEvent = new CustomEvent('collectBonusEvent');
            document.dispatchEvent(collectEvent);
        }
        else {
            this.amount.style = fontStyles_1.FontStyles.counterFont;
            this.amount.visible = true;
            this.addValue(this.result);
        }
    }
    addValue(value) {
        this.counter.update(this.counter.endVal + value);
    }
    substractValue(value) {
        this.counter.updateStack(this.counter.endVal - value);
    }
    countTill(value) {
        this.counter.update(value);
    }
    enable() {
        this.symbol.texture = this.symbolEnable;
        this.symbol.interactive = true;
    }
    disable() {
        this.symbol.interactive = false;
        this.amount.visible = false;
        this.symbol.visible = true;
        this.symbol.texture = this.symbolDisable;
    }
    over() {
        this.symbol.texture = this.symbolOver;
    }
    showPossibleWin() {
        if (this.result == 0) {
            this.collect.texture = this.collectMissed;
            this.collect.visible = true;
        }
        else {
            this.amount.text = helperFuncs_1.formatStakeAmount(this.result * 100);
            this.amount.style = fontStyles_1.FontStyles.possibleWincounterFont;
            this.amount.visible = true;
        }
    }
    setPossibleWinsDisabled() {
        this.symbol.interactive = false;
        this.symbol.texture = this.symbolMissed;
    }
    reset() {
        this.disable();
        this.collect.visible = false;
        this.amount.style = fontStyles_1.FontStyles.counterFont;
        this.selected = false;
        this.countTill(0);
    }
    pumpAnim() {
        this.over();
        let directionUp = true;
        main_1.app.ticker.add(pumpSymbol, this);
        function pumpSymbol(timedelta) {
            if (this.symbol.scale.x < 1.2 && directionUp) {
                this.symbol.scale.x = Math.min(this.symbol.scale.x + (0.01 * timedelta), 1.2);
                this.symbol.scale.y = Math.min(this.symbol.scale.y + (0.01 * timedelta), 1.2);
            }
            else if (this.symbol.scale.x == 1.2 && directionUp) {
                directionUp = false;
            }
            else {
                this.symbol.scale.x = Math.max(this.symbol.scale.x - (0.01 * timedelta), 1);
                this.symbol.scale.y = Math.max(this.symbol.scale.y - (0.01 * timedelta), 1);
                if (this.symbol.scale.x == 1) {
                    this.disable();
                    let animEndEvent = new CustomEvent('pumpSymbolEnd', { 'detail': { 'fruitType': this.fruitType } });
                    document.dispatchEvent(animEndEvent);
                    main_1.app.ticker.remove(pumpSymbol, this);
                }
            }
        }
    }
}
exports.FruitObject = FruitObject;

},{"../Utils/animation_objects":24,"../Utils/counter":25,"../Utils/fontStyles":26,"../Utils/helperFuncs":27,"../main":28}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 10/8/2017.
 */
class LineObject {
    constructor() {
        this.elements = [];
    }
    addElement(el) {
        this.elements.push(el);
    }
    addElements(...args) {
        for (let i = 0; i < arguments.length; i++) {
            this.elements.push(arguments[i]);
        }
    }
    enableLine() {
        for (let i = 0; i < this.elements.length; i++) {
            this.elements[i].enable();
        }
    }
    disableLine() {
        for (let i = 0; i < this.elements.length; i++) {
            this.elements[i].disable();
        }
    }
    overLine() {
        for (let i = 0; i < this.elements.length; i++) {
            this.elements[i].over();
        }
    }
    showPossibleWin() {
        for (let i = 0; i < this.elements.length; i++) {
            if (!this.elements[i].selected) {
                this.elements[i].showPossibleWin();
            }
        }
    }
    setPossibleWinsDisabled() {
        for (let i = 0; i < this.elements.length; i++) {
            if (!this.elements[i].selected) {
                this.elements[i].setPossibleWinsDisabled();
            }
        }
    }
    resetLine() {
        for (let i = 0; i < this.elements.length; i++) {
            this.elements[i].reset();
        }
    }
}
exports.LineObject = LineObject;

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const helperFuncs_1 = require("../Utils/helperFuncs");
const main_1 = require("../main");
const reelsConfig_1 = require("../ReelSpinner/reelsConfig");
const WinShow_1 = require("./WinShow");
class BaseGameController {
    constructor(scene) {
        this.balance = 10000;
        this.totalWin = 100;
        this.currentStake = 100;
        this.scene = scene;
        this.WinShowController = new WinShow_1.WinShowController(scene);
        this.scene.balanceField.addValue(this.balance);
        this.stakes = scene.stakeButton.stakes;
        this.buttonStates = {
            'idle': [
                { 'button': scene.startButton, 'state': 'enable' },
                { 'button': scene.stopButton, 'state': 'hide' },
                { 'button': scene.collectButton, 'state': 'hide' },
                { 'button': scene.startBonusButton, 'state': 'hide' },
                { 'button': scene.maxBetButton, 'state': 'enable' },
                { 'button': scene.autoStartButton, 'state': 'enable' },
                { 'button': scene.cancelAutoStartButton, 'state': 'hide' },
                { 'button': scene.stakeButton, 'state': 'enable' },
                { 'button': scene.gambleButton, 'state': 'disable' },
                { 'button': scene.helpButton, 'state': 'enable' },
                { 'button': scene.menuButton, 'state': 'enable' },
            ],
            'round': [
                { 'button': scene.startButton, 'state': 'hide' },
                { 'button': scene.stopButton, 'state': 'enable' },
                { 'button': scene.collectButton, 'state': 'hide' },
                { 'button': scene.startBonusButton, 'state': 'hide' },
                { 'button': scene.maxBetButton, 'state': 'disable' },
                { 'button': scene.autoStartButton, 'state': 'disable' },
                { 'button': scene.cancelAutoStartButton, 'state': 'hide' },
                { 'button': scene.stakeButton, 'state': 'disable' },
                { 'button': scene.gambleButton, 'state': 'disable' },
                { 'button': scene.helpButton, 'state': 'disable' },
                { 'button': scene.menuButton, 'state': 'disable' },
            ],
            'collect': [
                { 'button': scene.startButton, 'state': 'hide' },
                { 'button': scene.stopButton, 'state': 'hide' },
                { 'button': scene.collectButton, 'state': 'enable' },
                { 'button': scene.startBonusButton, 'state': 'hide' },
                { 'button': scene.maxBetButton, 'state': 'disable' },
                { 'button': scene.autoStartButton, 'state': 'disable' },
                { 'button': scene.cancelAutoStartButton, 'state': 'hide' },
                { 'button': scene.stakeButton, 'state': 'disable' },
                { 'button': scene.gambleButton, 'state': 'enable' },
                { 'button': scene.helpButton, 'state': 'disable' },
                { 'button': scene.menuButton, 'state': 'disable' },
            ]
        };
        this.onStartButton = function () {
            this.onStartButtonFunc();
        }.bind(this);
        this.onReelsStop = function () {
            this.onReelsStopFunc();
        }.bind(this);
        this.onSlamOut = function () {
            this.onSlamOutFunc();
        }.bind(this);
        this.onStakeButton = function () {
            this.onStakeButtonFunc();
        }.bind(this);
        this.onChangeStake = function (e) {
            this.onChangeStakeFunc(e);
        }.bind(this);
        this.onMaxBet = function () {
            this.onMaxBetButtonFunc();
        }.bind(this);
        this.onGamble = function () {
            this.onGambleFunc();
        }.bind(this);
        this.setState('idle');
        this.addEventListeners();
    }
    setState(state) {
        this.state = state;
        if (state == 'idle') {
            this.enableWinLineButtons();
        }
        else {
            this.disableWinLineButtons();
        }
        // set button states:
        let buttonState = this.buttonStates[state];
        for (let i = 0; i < buttonState.length; i++) {
            if (buttonState[i].state == 'enable') {
                buttonState[i].button.enable();
            }
            else if (buttonState[i].state == 'disable') {
                buttonState[i].button.disable();
            }
            else if (buttonState[i].state == 'hide') {
                buttonState[i].button.hide();
            }
        }
    }
    addEventListeners() {
        document.addEventListener('StartButtonPressed', this.onStartButton);
        document.addEventListener('LastReelStopped', this.onReelsStop);
        document.addEventListener('StopButtonPressed', this.onSlamOut);
        document.addEventListener('BetButtonPressed', this.onStakeButton);
        document.addEventListener('changeStakeEvent', this.onChangeStake);
        document.addEventListener('MaxBetButtonPressed', this.onMaxBet);
        document.addEventListener('GambleButtonPressed', this.onGamble);
        document.addEventListener('MenuButtonPressed', function () {
            //GDKWrapper.GameExit();
            window.close();
        });
        document.addEventListener('StartBonusButtonPressed', function () {
            main_1.SCENE_MANAGER.goToGameScene('bonusGame');
            main_1.bonusController.startBonus();
        });
        document.addEventListener('HelpButtonPressed', function () {
            main_1.SCENE_MANAGER.goToGameScene('mainHelp');
        });
        document.addEventListener('ClickedOnBaseGameScene', function () {
            if (this.scene.stakeButton.isShown) {
                this.scene.stakeButton.hidePanel();
            }
        }.bind(this));
        document.addEventListener('exitGambleEvent', function () {
            this.totalWin = main_1.gambleController.bank;
            this.onCollect();
        }.bind(this));
        document.addEventListener('CollectButtonPressed', function () {
            this.onCollect();
        }.bind(this));
    }
    removeEventListeners() {
        document.removeEventListener('StartButtonPressed', this.onStartButton);
    }
    onSlamOutFunc() {
        this.scene.REELS.slamout();
    }
    onStartButtonFunc() {
        this.setState('round');
        this.scene.totalWinField.counter.reset();
        this.balance -= this.currentStake;
        this.scene.balanceField.substractValue(this.currentStake);
        this.WinShowController.updatePayouts(reelsConfig_1.response);
        this.totalWin = reelsConfig_1.response.data.gameData.totalWinAmount;
        let stops = this.getStopsArray(reelsConfig_1.response);
        this.scene.REELS.spin(stops);
    }
    getStopsArray(roundResponse) {
        let symbolUpdates = roundResponse.data.gameData.playStack[0].lastPlayInModeData.slotsData.actions[0].transforms[0].symbolUpdates, result = [[], [], [], [], []];
        for (let i = 0; i < symbolUpdates.length; i++) {
            result[symbolUpdates[i].reelIndex][symbolUpdates[i].positionOnReel] = symbolUpdates[i].symbol;
        }
        return result;
    }
    onReelsStopFunc() {
        if (this.totalWin == 0) {
            this.setState('idle');
            this.checkIfBetPossible();
        }
        else {
            this.setState('collect');
            this.scene.interactive = true;
            this.WinShowController.playWinShow();
            this.scene.totalWinField.addValue(this.totalWin);
        }
    }
    onStakeButtonFunc() {
        if (this.scene.stakeButton.isShown) {
            let currentStakeIndex = this.scene.stakeButton.stakes.indexOf(this.scene.stakeButton.currentStakeAmount), nextStake = helperFuncs_1.nextItem(this.scene.stakeButton.stakes, currentStakeIndex);
            this.scene.stakeButton.changeStake(nextStake);
        }
        else {
            this.scene.stakeButton.showPanel();
        }
    }
    checkIfBetPossible() {
        if (this.balance < this.currentStake) {
            this.scene.startButton.disable();
            this.scene.autoStartButton.disable();
            return false;
        }
        else {
            this.scene.startButton.enable();
            this.scene.autoStartButton.enable();
            return true;
        }
    }
    onChangeStakeFunc(event) {
        this.currentStake = event.detail.newStake;
        this.checkIfBetPossible();
    }
    onMaxBetButtonFunc() {
        for (let i = 0; i < this.stakes.length; i++) {
            if (this.balance < this.stakes[i]) {
                continue;
            }
            else {
                this.scene.stakeButton.changeStake(this.stakes[i]);
                break;
            }
        }
    }
    onGambleFunc() {
        main_1.SCENE_MANAGER.goToGameScene('gamble');
        main_1.gambleController.startGamble(this.totalWin);
    }
    onCollect() {
        this.scene.totalWinField.counter.reset();
        this.scene.balanceField.addValue(this.totalWin);
        this.balance += this.totalWin;
        this.totalWin = 0;
        this.setState('idle');
    }
    disableWinLineButtons() {
        for (let i = 0; i < this.scene.winLinesArray.length; i++) {
            this.scene.winLinesArray[i].disable();
        }
    }
    enableWinLineButtons() {
        for (let i = 0; i < this.scene.winLinesArray.length; i++) {
            this.scene.winLinesArray[i].enable();
        }
    }
}
exports.BaseGameController = BaseGameController;

},{"../ReelSpinner/reelsConfig":20,"../Utils/helperFuncs":27,"../main":28,"./WinShow":7}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const main_1 = require("../main");
class BonusGameController {
    constructor(scene) {
        this.scene = scene;
        this.pumpEndEventsCounter = {
            0: 0,
            1: 0,
            2: 0,
            3: 0,
            4: 0
        };
        this.linesOrder = {
            0: this.scene.wmLine,
            1: this.scene.plumLine,
            2: this.scene.orangeLine,
            3: this.scene.lemonLine,
            4: this.scene.cherryLine,
        };
        let pumpCallback = function () {
            this.activateLine(4);
        }.bind(this);
        this.onPumpSymbolEnd = function (e) {
            this.introAnim(e, pumpCallback);
        }.bind(this);
        this.onActivateNextLine = function (e) {
            this.activateNextLine(e);
        }.bind(this);
        this.onShowPossibleWins = function () {
            this.showPossibleWins();
        }.bind(this);
        this.setPossibleWinsDis = function () {
            this.setPosWinsDis();
        }.bind(this);
        this.onBonusEnd = function () {
            this.endBonus();
        }.bind(this);
        this.onFinalCounterEnd = function () {
            this.scene.endBonusDialog.pumpAnim();
        }.bind(this);
        this.onCollect = function () {
            this.Collect();
        }.bind(this);
    }
    addEventListeners() {
        document.addEventListener('userChoose', this.setPossibleWinsDis);
        document.addEventListener('showResults', this.onShowPossibleWins);
        document.addEventListener('FruitCounterEnded', this.onActivateNextLine);
        document.addEventListener('finalCounterEnd', this.onFinalCounterEnd);
        document.addEventListener('pumpWinAmountEnd', this.onBonusEnd);
        document.addEventListener('pumpSymbolEnd', this.onPumpSymbolEnd);
        document.addEventListener('collectBonusEvent', this.onCollect);
    }
    removeEventListeners() {
        document.removeEventListener('userChoose', this.setPossibleWinsDis);
        document.removeEventListener('showResults', this.onShowPossibleWins);
        document.removeEventListener('FruitCounterEnded', this.onActivateNextLine);
        document.removeEventListener('finalCounterEnd', this.onFinalCounterEnd);
        document.removeEventListener('pumpWinAmountEnd', this.onBonusEnd);
        document.removeEventListener('pumpSymbolEnd', this.onPumpSymbolEnd);
        document.removeEventListener('collectBonusEvent', this.onCollect);
    }
    getBonusResults() {
        for (let i = 0; i < this.scene.cherryLine.elements.length; i++) {
            this.scene.cherryLine.elements[i].result = Math.floor((Math.random() * 100));
        }
        for (let i = 0; i < this.scene.lemonLine.elements.length; i++) {
            this.scene.lemonLine.elements[i].result = Math.floor((Math.random() * 100));
        }
        for (let i = 0; i < this.scene.orangeLine.elements.length; i++) {
            this.scene.orangeLine.elements[i].result = Math.floor((Math.random() * 100));
        }
        for (let i = 0; i < this.scene.plumLine.elements.length; i++) {
            this.scene.plumLine.elements[i].result = Math.floor((Math.random() * 100));
        }
        for (let i = 0; i < this.scene.wmLine.elements.length; i++) {
            this.scene.wmLine.elements[i].result = Math.floor((Math.random() * 100));
        }
    }
    activateLine(lineNumber) {
        let line = this.linesOrder[lineNumber];
        this.currentLine = lineNumber;
        line.enableLine();
    }
    showPossibleWins() {
        this.linesOrder[this.currentLine].showPossibleWin();
    }
    setPosWinsDis() {
        this.linesOrder[this.currentLine].setPossibleWinsDisabled();
    }
    Collect() {
        this.scene.endBonusDialog.totalWin = this.scene.bonusWinField.counter.endVal;
        this.scene.endBonusDialog.show();
    }
    activateNextLine(event) {
        this.scene.bonusWinField.addValue(event.detail.result);
        if (this.currentLine == 0) {
            // TODO: start final bonus anim;
            this.scene.endBonusDialog.totalWin = this.scene.bonusWinField.counter.endVal;
            this.scene.endBonusDialog.show();
        }
        else {
            this.activateLine(this.currentLine - 1);
        }
    }
    endBonus() {
        //  update eventCounters:
        this.resetPumpSymbolCounters();
        // remove event listenters:
        this.removeEventListeners();
        // finalDialog
        this.scene.endBonusDialog.hide();
        this.scene.endBonusDialog.counter.reset();
        // bonus win field:
        this.scene.bonusWinField.counter.reset();
        // disable lines:
        this.scene.cherryLine.resetLine();
        this.scene.lemonLine.resetLine();
        this.scene.orangeLine.resetLine();
        this.scene.plumLine.resetLine();
        this.scene.wmLine.resetLine();
        main_1.SCENE_MANAGER.goToGameScene('baseGame');
    }
    resetPumpSymbolCounters() {
        this.pumpEndEventsCounter = {
            0: 0,
            1: 0,
            2: 0,
            3: 0,
            4: 0
        };
    }
    startBonus() {
        this.addEventListeners();
        this.getBonusResults();
        this.playIntro();
    }
    getNextLine(event) {
        if (event.detail.fruitType == 0)
            return this.scene.plumLine;
        else if (event.detail.fruitType == 1)
            return this.scene.orangeLine;
        else if (event.detail.fruitType == 2)
            return this.scene.lemonLine;
        else
            return this.scene.cherryLine;
    }
    canMoveToNextLine(event) {
        if (event.detail.fruitType == 0) {
            this.pumpEndEventsCounter[0] += 1;
            if (this.pumpEndEventsCounter[0] == 6)
                return true;
            return false;
        }
        else if (event.detail.fruitType == 1) {
            this.pumpEndEventsCounter[1] += 1;
            if (this.pumpEndEventsCounter[1] == 5)
                return true;
            return false;
        }
        else if (event.detail.fruitType == 2) {
            this.pumpEndEventsCounter[2] += 1;
            if (this.pumpEndEventsCounter[2] == 4)
                return true;
            return false;
        }
        else if (event.detail.fruitType == 3) {
            this.pumpEndEventsCounter[3] += 1;
            if (this.pumpEndEventsCounter[3] == 3)
                return true;
            return false;
        }
        else {
            this.pumpEndEventsCounter[4] += 1;
            if (this.pumpEndEventsCounter[4] == 2) {
                return true;
            }
            return false;
        }
    }
    introAnim(event, callback) {
        let isNextLine = this.canMoveToNextLine(event);
        if (isNextLine && event.detail.fruitType == 4) {
            callback();
        }
        else if (isNextLine) {
            let line = this.getNextLine(event);
            for (let i = 0; i < line.elements.length; i++) {
                line.elements[i].pumpAnim();
            }
        }
        else {
        }
    }
    playIntro() {
        for (let i = 0; i < this.scene.wmLine.elements.length; i++) {
            this.scene.wmLine.elements[i].pumpAnim();
        }
    }
}
exports.BonusGameController = BonusGameController;

},{"../main":28}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ButtonEvents_1 = require("../Events/ButtonEvents");
const main_1 = require("../main");
let GambleButtonStates = {
    'idle': ['enable', 'enable', 'enable'],
    'round': ['disable', 'disable', 'disable']
};
let GambleMessages = {
    'idle': 'Red or Black to gamble',
    'round': 'Good Luck',
    'win': 'WIN',
    'lose': 'LOSE'
};
class GambleController {
    constructor(scene) {
        this.scene = scene;
        this.gambleLimit = 50000;
        this.bank = 0;
        this.doubleTo = 0;
        this.GambleButtons = [scene.redButton, scene.blackButton, scene.collectButton];
        this.playGambleRed = this.playGamble.bind(this, 'red');
        this.playGambleBlack = this.playGamble.bind(this, 'black');
        this.exitGambleF = this.exitGamble.bind(this);
        this.gamble_amb = new Audio(this.scene.resources.gamble_amb.url);
        this.gamble_amb.addEventListener('ended', function () {
            this.currentTime = 0;
            this.play();
        }, false);
        this.winSounds = [
            new Audio(this.scene.resources.gamble_win1.url),
            new Audio(this.scene.resources.gamble_win2.url),
            new Audio(this.scene.resources.gamble_win3.url),
            new Audio(this.scene.resources.gamble_win4.url),
            new Audio(this.scene.resources.gamble_win5.url),
        ];
        this.loseSound = new Audio(this.scene.resources.gamble_lose.url);
        this.setState('idle');
    }
    setState(state) {
        this.state = state;
        this.scene.textField.text.text = GambleMessages[state];
        // set button states:
        for (let i = 0; i < GambleButtonStates[state].length; i++) {
            if (GambleButtonStates[state][i] == 'enable') {
                this.GambleButtons[i].enable();
            }
            else if (GambleButtonStates[state][i] == 'disable') {
                this.GambleButtons[i].disable();
            }
            else if (GambleButtonStates[state][i] == 'hide') {
                this.GambleButtons[i].hide();
            }
        }
    }
    setBank(amount) {
        this.bank = amount;
        this.scene.bankField.countTill(amount);
        this.scene.doubleToField.countTill(((amount * 2)));
    }
    startGamble(amount) {
        this.amountOfTries = 0;
        this.gamble_amb.play();
        this.setState('idle');
        this.setBank(amount);
        this.signToButtonEvents();
    }
    getSuitColor(suitValue) {
        if (suitValue == 0 || suitValue == 3)
            return "black";
        else
            return "red";
    }
    playGamble(playerChoice) {
        this.amountOfTries++;
        this.setState('round');
        this.unSignFromButtonEvents();
        let randomSuit = Math.floor((Math.random() * 4)), randomCard = Math.floor((Math.random() * 14)), cardTexture = this.scene.gambleCard.getCardFaceTexture(randomSuit, randomCard);
        this.scene.gambleCard.flip(cardTexture, function () {
            this.scene.gambleHistory.showHiddenCard(cardTexture);
            this.scene.gambleHistory.updateHistoryWithNewResult([randomSuit, randomCard]);
            this.scene.gambleHistory.moveLastCards(function () {
                this.scene.gambleHistory.resetLastCards();
                if (playerChoice == this.getSuitColor(randomSuit)) {
                    this.scene.textField.text.text = GambleMessages['win'];
                    if (this.amountOfTries < 4) {
                        this.winSounds[this.amountOfTries % 5].play();
                    }
                    else {
                        this.winSounds[4].play();
                    }
                    let win = this.bank * 2;
                    this.bank = win;
                    if (win > this.gambleLimit / 2) {
                        this.scene.bankField.countTill(win);
                        this.scene.doubleToField.text.text = '';
                        document.dispatchEvent(ButtonEvents_1.ButtonEvents.GambleCollectPressed);
                    }
                    else {
                        this.scene.gambleCard.flip(this.scene.gambleCard.cardBackT, function () {
                            this.setBank(win);
                            this.signToButtonEvents();
                            this.setState('idle');
                        }.bind(this));
                    }
                }
                else {
                    this.scene.textField.text.text = GambleMessages['lose'];
                    this.loseSound.play();
                    this.scene.gambleCard.flip(this.scene.gambleCard.cardBackT, function () {
                        this.setBank(0);
                        setTimeout(this.exitGambleF, 2000);
                    }.bind(this));
                }
            }.bind(this));
        }.bind(this));
    }
    exitGamble() {
        let exitGambleEvent = new CustomEvent('exitGambleEvent');
        this.gamble_amb.pause();
        this.gamble_amb.currentTime = 0;
        document.dispatchEvent(exitGambleEvent);
        main_1.SCENE_MANAGER.goToGameScene('baseGame');
    }
    signToButtonEvents() {
        document.addEventListener('GambleRedPressed', this.playGambleRed);
        document.addEventListener('GambleBlackPressed', this.playGambleBlack);
        document.addEventListener('GambleCollectPressed', this.exitGambleF);
    }
    unSignFromButtonEvents() {
        document.removeEventListener('GambleRedPressed', this.playGambleRed);
        document.removeEventListener('GambleBlackPressed', this.playGambleBlack);
        document.removeEventListener('GambleCollectPressed', this.exitGambleF);
    }
}
exports.GambleController = GambleController;

},{"../Events/ButtonEvents":8,"../main":28}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 10/17/2017.
 */
class WinShowController {
    constructor(scene) {
        this.scene = scene;
        this.currentWinLineIndex = 0;
        this.skipWinShow = false;
        this.onReelAnimEnd = function (e) {
            if (!this.skipWinShow)
                this.onWinShowEnd(e);
        }.bind(this);
        this.onSkipWinShow = function () {
            this.onSkipWinShowFunc();
        }.bind(this);
        document.addEventListener('ReelWinShowAnimEnd', this.onReelAnimEnd);
        document.addEventListener('skipWinShow', this.onSkipWinShow);
    }
    updatePayouts(response) {
        this.payouts = response.data.gameData.playStack[0].lastPlayInModeData.slotsData.actions[1].payouts;
    }
    playWinShow() {
        this.skipWinShow = false;
        this.playingWinShow = true;
        let payoutObj = this.payouts[this.currentWinLineIndex];
        if (payoutObj.context.symbolPayoutType == "WinLine" && !this.skipWinShow) {
            let winOnLine = payoutObj.payoutData.payoutWinAmount, winline = this.scene.winShowLineArray[payoutObj.context.winLineIndex - 1], winSymbols = this.parseWinSymbols(payoutObj), positionOnReel = this.parsePositionIndex(payoutObj);
            this.currentWinLine = winline;
            let symbol = payoutObj.context.symbol;
            winline.winShow(winSymbols, positionOnReel, winOnLine, symbol);
        }
    }
    onSkipWinShowFunc() {
        if (this.currentWinLine && this.playingWinShow) {
            this.skipWinShow = true;
            this.playingWinShow = false;
            this.currentWinLineIndex = 0;
            this.currentWinLine.stopWinShow();
        }
    }
    onWinShowEnd(event) {
        if (event.detail.reelIndex == (this.currentWinLine.currentWinSymbolsAmount - 1)) {
            this.currentWinLine.stopWinShow();
            this.updateWinlineIndex();
            this.playWinShow();
        }
    }
    parseWinSymbols(payoutObj) {
        let winSymbols = [];
        for (let i = 0; i < payoutObj.context.winningSymbols.length; i++) {
            winSymbols.push(payoutObj.context.winningSymbols[i].symbol);
        }
        return winSymbols;
    }
    parsePositionIndex(payoutObj) {
        let positions = [];
        for (let i = 0; i < payoutObj.context.winningSymbols.length; i++) {
            positions.push(payoutObj.context.winningSymbols[i].positionOnReel);
        }
        return positions;
    }
    updateWinlineIndex() {
        this.currentWinLineIndex++;
        if (this.currentWinLineIndex >= this.payouts.length)
            this.currentWinLineIndex = 0;
    }
}
exports.WinShowController = WinShowController;

},{}],8:[function(require,module,exports){
/**
 * Created by tarasg on 9/25/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
let GambleRedPressed = new CustomEvent("GambleRedPressed"), GambleBlackPressed = new CustomEvent("GambleBlackPressed"), GambleCollectPressed = new CustomEvent("GambleCollectPressed"), ClickedOnBaseGameScene = new CustomEvent("ClickedOnBaseGameScene"), BetButtonPressed = new CustomEvent('BetButtonPressed'), GambleButtonPressed = new CustomEvent('GambleButtonPressed'), AutoStartButtonPressed = new CustomEvent('AutoStartButtonPressed'), MaxBetButtonPressed = new CustomEvent('MaxBetButtonPressed'), ExitHelpButtonPressed = new CustomEvent('ExitHelpButtonPressed'), PrevHelpPageButtonPressed = new CustomEvent('PrevHelpPageButtonPressed'), NextHelpPageButtonPressed = new CustomEvent('NextHelpPageButtonPressed'), HelpButtonPressed = new CustomEvent('HelpButtonPressed'), MenuButtonPressed = new CustomEvent('MenuButtonPressed'), StopButtonPressed = new CustomEvent('StopButtonPressed'), StartBonusButtonPressed = new CustomEvent('StartBonusButtonPressed'), CollectButtonPressed = new CustomEvent('CollectButtonPressed'), StartButtonPressed = new CustomEvent('StartButtonPressed'), CancelAutoStartButtonPressed = new CustomEvent('CancelAutoStartButtonPressed');
exports.ButtonEvents = {
    'ClickedOnBaseGameScene': ClickedOnBaseGameScene,
    'StartButtonPressed': StartButtonPressed,
    'StopButtonPressed': StopButtonPressed,
    'CollectButtonPressed': CollectButtonPressed,
    'StartBonusButtonPressed': StartBonusButtonPressed,
    'MenuButtonPressed': MenuButtonPressed,
    'HelpButtonPressed': HelpButtonPressed,
    'GambleButtonPressed': GambleButtonPressed,
    'BetButtonPressed': BetButtonPressed,
    'MaxBetButtonPressed': MaxBetButtonPressed,
    'AutoStartButtonPressed': AutoStartButtonPressed,
    'CancelAutoStartButtonPressed': CancelAutoStartButtonPressed,
    'NextHelpPageButtonPressed': NextHelpPageButtonPressed,
    'PrevHelpPageButtonPressed': PrevHelpPageButtonPressed,
    'ExitHelpButtonPressed': ExitHelpButtonPressed,
    'GambleCollectPressed': GambleCollectPressed,
    'GambleRedPressed': GambleRedPressed,
    'GambleBlackPressed': GambleBlackPressed,
};

},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 9/22/2017.
 */
/**
 * Created by tarasg on 5/10/2017.
 */
const main_1 = require("../main");
const utils = require("../Utils/helperFuncs");
class Button {
    constructor(scene, x, y, enabled_img, dis_img, pressed_img, sound, action) {
        // enabled_img, dis_img, pressed_img:  PIXI.Textutre or string url to the image
        this.x = x;
        this.y = y;
        this.sound = sound;
        this.scene = scene;
        if (typeof enabled_img === "string" && typeof dis_img === "string" && typeof pressed_img === "string") {
            this.textureEnabled = PIXI.Texture.fromImage(enabled_img);
            this.textureDisabled = PIXI.Texture.fromImage(dis_img);
            this.texturePressed = PIXI.Texture.fromImage(pressed_img);
        }
        else {
            this.textureEnabled = enabled_img;
            this.textureDisabled = dis_img;
            this.texturePressed = pressed_img;
        }
        this.onButtonClick = action;
        this.sprite = new PIXI.Sprite(this.textureEnabled);
        this.sprite.interactive = true;
        this.sprite.buttonMode = true;
        this.isDown = false;
        this.state = 'enabled';
        this.sprite.anchor.set(0.5, 0.5);
        this.sprite.x = this.x;
        this.sprite.y = this.y;
        this.sprite.on('pointerdown', function (e) {
            this.isDown = true;
            this.sound.currentTime = 0;
            this.sound.play();
            this.sprite.texture = this.texturePressed;
        }.bind(this));
        this.sprite.on('pointerup', function (e) {
            this.sprite.texture = this.textureEnabled;
            if (this.isDown)
                this.onButtonClick();
            this.isDown = false;
        }.bind(this));
        this.sprite.on('pointerout', function () {
            this.sprite.texture = this.textureEnabled;
            this.isDown = false;
        }.bind(this));
        this.scene.addChild(this.sprite);
        this.sprite.model = this;
    }
    hide() {
        this.sprite.visible = false;
    }
    show() {
        this.sprite.visible = true;
    }
    disable() {
        this.state = 'disabled';
        this.sprite.texture = this.textureDisabled;
        this.sprite.interactive = false;
    }
    enable() {
        this.state = 'enabled';
        this.sprite.visible = true;
        this.sprite.texture = this.textureEnabled;
        this.sprite.interactive = true;
    }
    click() {
        this.state = 'pressed';
        this.sprite.texture = this.texturePressed;
        this.sprite.interactive = false;
    }
}
exports.Button = Button;
class DenominationPanelButton extends Button {
    constructor(scene, x, y, fontStyle, stakeFontStyle, denomBottom, denomTop, denomMid, denomSelect, enabled_img, dis_img, pressed_img, sound, action) {
        super(scene, x, y, enabled_img, dis_img, pressed_img, sound, action);
        this.stakesYpos = [];
        this.isShown = false;
        this.selectedStake = new PIXI.Text('', fontStyle);
        this.fontStyle = fontStyle;
        this.stakeFontStyle = stakeFontStyle;
        this.denomPartContainers = [];
        if (typeof denomBottom === "string" && typeof denomTop === "string" && typeof denomMid === "string" && typeof denomSelect === "string") {
            this.denomBottom = PIXI.Texture.fromImage(denomBottom);
            this.denomTop = PIXI.Texture.fromImage(denomTop);
            this.denomMiddle = PIXI.Texture.fromImage(denomMid);
            this.denomSelected = PIXI.Texture.fromImage(denomSelect);
        }
        else {
            this.denomBottom = denomBottom;
            this.denomTop = denomTop;
            this.denomMiddle = denomMid;
            this.denomSelected = denomSelect;
        }
        this.enableEventPropagination();
        this.getStakes();
        this.initializeDenominationPanel();
        this.intitializeCurrentStake();
    }
    initializeDenominationPanel() {
        this.denomSpriteBottom = new PIXI.Sprite(this.denomBottom);
        this.denomSpriteMiddle = new PIXI.Sprite(this.denomMiddle);
        this.denomSpriteTop = new PIXI.Sprite(this.denomTop);
        this.denomSpriteSelected = new PIXI.Sprite(this.denomSelected);
        this.denomPanelContainer = new PIXI.Container();
        this.denomPanelContainer.visible = false;
        this.denomPanelContainer.alpha = 0;
        this.denomPanelContainer.x = this.sprite.x - this.sprite.width / 2;
        this.denomPanelContainer.y = (this.sprite.y - this.sprite.height / 2) - this.denomSpriteTop.height - (this.denomSpriteMiddle.height * (this.stakes.length - 2)) - this.denomSpriteBottom.height;
        for (let i = 0; i < this.stakes.length; i++) {
            this.addDenomPanelPart(i);
        }
        this.scene.addChild(this.denomPanelContainer);
    }
    addDenomPanelPart(index) {
        let partContainer = new PIXI.Container(), stake = new PIXI.Text(utils.formatStakeAmount(this.stakes[index]), this.fontStyle), partSprite;
        stake.anchor.set(0.5, 0.5);
        stake.x = this.denomSpriteMiddle.width / 2;
        stake.y = this.denomSpriteMiddle.height / 2;
        if (index == 0) {
            partSprite = this.denomSpriteTop;
            stake.y = partSprite.height - this.denomSpriteMiddle.height / 2;
            partContainer.y = 0;
        }
        else if (index == this.stakes.length - 1) {
            partSprite = this.denomSpriteBottom;
            partContainer.y = this.denomSpriteTop.height + (this.denomSpriteMiddle.height * (this.stakes.length - 2));
        }
        else {
            partSprite = new PIXI.Sprite(this.denomMiddle);
            partContainer.y = this.denomSpriteTop.height + (this.denomSpriteMiddle.height * (index - 1));
        }
        this.stakesYpos.push(partContainer.y + stake.y);
        partContainer.addChild(partSprite);
        partContainer.interactive = true;
        partContainer.on('pointerdown', function (e) {
            e.stopPropagation();
            this.changeStake(this.stakes[index]);
        }.bind(this));
        partContainer.addChild(stake);
        this.denomPartContainers.push(partContainer);
        this.denomPanelContainer.addChild(partContainer);
    }
    getStakes() {
        this.stakes = [20, 40, 60, 80, 100].reverse();
        this.currentStakeAmount = this.stakes[0];
    }
    intitializeCurrentStake() {
        this.selectedStake = new PIXI.Text(utils.formatStakeAmount(this.currentStakeAmount), this.stakeFontStyle);
        this.selectedStake.anchor.set(0.5, 0.5);
        this.selectedStake.x = this.sprite.x;
        this.selectedStake.y = this.sprite.y + 5; // +5 due to graphics issue
        this.scene.addChild(this.selectedStake);
        this.denomSpriteSelected.anchor.set(0.5, 0.5);
        this.denomSpriteSelected.alpha = 0.2;
        this.denomSpriteSelected.x = this.denomSpriteMiddle.width / 2;
        this.denomSpriteSelected.y = this.getSelectedStakeYpos();
        this.denomPanelContainer.addChild(this.denomSpriteSelected);
    }
    getSelectedStakeYpos() {
        let index = this.stakes.indexOf(this.currentStakeAmount);
        return this.stakesYpos[index];
    }
    enableEventPropagination() {
        this.sprite.on('pointerdown', function (e) {
            e.stopPropagation();
            this.isDown = true;
            this.sound.currentTime = 0;
            this.sound.play();
            this.sprite.texture = this.texturePressed;
        }.bind(this));
        this.sprite.on('pointerup', function (e) {
            e.stopPropagation();
            this.sprite.texture = this.textureEnabled;
            if (this.isDown)
                this.onClick();
            this.isDown = false;
        }.bind(this));
    }
    showPanel() {
        if (!this.isShown)
            main_1.app.ticker.add(showPanelAnimation, this);
        function showPanelAnimation(timedelta) {
            this.denomPanelContainer.visible = true;
            this.denomPanelContainer.alpha = Math.min((this.denomPanelContainer.alpha + (0.08 * timedelta)), 1);
            if (this.denomPanelContainer.alpha == 1) {
                this.isShown = true;
                this.scene.interactive = true;
                main_1.app.ticker.remove(showPanelAnimation, this);
            }
        }
    }
    hidePanel() {
        if (this.isShown)
            main_1.app.ticker.add(hidePanelAnimation, this);
        function hidePanelAnimation(timedelta) {
            this.denomPanelContainer.alpha = Math.max((this.denomPanelContainer.alpha - (0.08 * timedelta)), 0);
            if (this.denomPanelContainer.alpha == 0) {
                this.denomPanelContainer.visible = false;
                this.isShown = false;
                this.scene.interactive = false;
                main_1.app.ticker.remove(hidePanelAnimation, this);
            }
        }
    }
    changeStake(to) {
        let toY = this.stakesYpos[this.stakes.indexOf(to)];
        this.setInteractiveForPartContainers(false);
        this.selectedStake.text = utils.formatStakeAmount(to);
        let changeStakeEvent = new CustomEvent('changeStakeEvent', { 'detail': { 'newStake': to } });
        document.dispatchEvent(changeStakeEvent);
        main_1.app.ticker.add(changeStakeAnimation, this);
        function changeStakeAnimation(timedelta) {
            if (this.denomSpriteSelected.y < toY) {
                this.denomSpriteSelected.y = Math.min(this.denomSpriteSelected.y + timedelta * 30, toY);
            }
            else if (this.denomSpriteSelected.y > toY) {
                this.denomSpriteSelected.y = Math.max(this.denomSpriteSelected.y - timedelta * 30, toY);
            }
            else {
                this.currentStakeAmount = to;
                this.setInteractiveForPartContainers(true);
                main_1.app.ticker.remove(changeStakeAnimation, this);
            }
        }
    }
    setInteractiveForPartContainers(value) {
        for (let i = 0; i < this.denomPartContainers.length; i++) {
            this.denomPartContainers[i].interactive = value;
        }
    }
}
exports.DenominationPanelButton = DenominationPanelButton;

},{"../Utils/helperFuncs":27,"../main":28}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 10/3/2017.
 */
const main_1 = require("../main");
class GambleCard {
    constructor(scene, x, y, cardBack_img, all_cards_img) {
        this.scene = scene;
        this.x = x;
        this.y = y;
        if (typeof cardBack_img === "string" && typeof all_cards_img === "string") {
            this.cardBackT = PIXI.Texture.fromImage(cardBack_img);
            this.allCardsBT = PIXI.BaseTexture.fromImage(all_cards_img);
        }
        else {
            this.cardBackT = cardBack_img;
            this.allCardsBT = PIXI.BaseTexture.from(all_cards_img);
        }
        this.cardBack = new PIXI.Sprite(this.cardBackT);
        this.cardBack.anchor.set(0.5, 0.5);
        this.cardBack.x = this.x;
        this.cardBack.y = this.y;
        this.scene.addChild(this.cardBack);
    }
    getCardFaceTexture(suit, value) {
        let cardWidth = 170, cardHeight = 235, spaceX = 10, spaceY = 10, x = 5 + (value * (cardWidth + spaceX)), y = 5 + (suit * (cardHeight + spaceY));
        return new PIXI.Texture(this.allCardsBT, new PIXI.Rectangle(x, y, cardWidth, cardHeight));
    }
    flip(texture, callback) {
        main_1.app.ticker.add(flipCardAnimation, this);
        let anim = true;
        function flipCardAnimation(timedelta) {
            if (anim) {
                this.cardBack.scale.x = Math.max(this.cardBack.scale.x - (0.05 * timedelta), 0);
                if (this.cardBack.scale.x == 0) {
                    this.cardBack.texture = texture;
                    anim = false;
                }
            }
            else {
                this.cardBack.scale.x = Math.min(this.cardBack.scale.x + (0.05 * timedelta), 1);
                if (this.cardBack.scale.x == 1) {
                    main_1.app.ticker.remove(flipCardAnimation, this);
                    // document.dispatchEvent(AnimationEndEvent.GambleCardFlipEnd);
                    callback();
                }
            }
        }
    }
}
exports.GambleCard = GambleCard;
class GambleHistory {
    constructor(scene, x, y, scaleSize, cardsToShow, cardBack_img, all_cards_img) {
        this.cards = [];
        this.scene = scene;
        this.scaleSize = scaleSize;
        this.cardsToShow = cardsToShow;
        this.x = x;
        this.y = y;
        this.historyContainer = new PIXI.Container();
        this.historyContainer.x = x;
        this.historyContainer.y = y;
        this.cardBackT = PIXI.Texture.fromImage(cardBack_img);
        this.allCardsBase = PIXI.BaseTexture.fromImage(all_cards_img);
        this.getCardsHistory();
        this.initializeHistory();
        this.containerMask = new PIXI.Graphics();
        this.initializeMask();
    }
    getCardsHistory() {
        // just hardcoded values
        this.history = [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7], [0, 8]];
    }
    getCardFaceTexture(suit, value) {
        let cardWidth = 170, cardHeight = 235, spaceX = 10, spaceY = 10, x = 5 + (value * (cardWidth + spaceX)), y = 5 + (suit * (cardHeight + spaceY));
        return new PIXI.Texture(this.allCardsBase, new PIXI.Rectangle(x, y, cardWidth, cardHeight));
    }
    initializeHistory() {
        for (let i = -1; i <= this.cardsToShow; i++) {
            let sprite;
            if (i <= 0) {
                sprite = new PIXI.Sprite(this.cardBackT);
                sprite.x = (i * (this.cardBackT.width) * this.scaleSize);
                sprite.y = this.y * this.scaleSize;
                sprite.scale.set(this.scaleSize, this.scaleSize);
            }
            else {
                sprite = new PIXI.Sprite(this.getCardFaceTexture(this.history[i - 1][0], this.history[i - 1][1]));
                sprite.x = (i * sprite.width * (this.scaleSize * (this.cardBackT.width / sprite.width)));
                sprite.y = this.y * this.scaleSize;
                sprite.scale.set((this.scaleSize * (this.cardBackT.width / sprite.width)), (this.scaleSize * (this.cardBackT.height / sprite.height)));
            }
            sprite.anchor.set(0.5, 0.5);
            this.historyContainer.addChild(sprite);
            this.cards.push(sprite);
        }
        this.scene.addChild(this.historyContainer);
    }
    initializeMask() {
        this.scene.addChild(this.containerMask);
        this.historyContainer.mask = this.containerMask;
        this.containerMask.lineStyle(0);
        this.containerMask.x = this.historyContainer.x;
        this.containerMask.y = this.historyContainer.y;
        this.containerMask.beginFill(0x8bc5ff);
        let mask_x = -(this.cards[1].width / 2), mask_y = 0;
        this.containerMask.drawRect(mask_x, mask_y, this.cards[1].width * (this.cardsToShow + 1), this.cardBackT.height);
        this.containerMask.endFill();
    }
    showHiddenCard(texture) {
        this.cards[1].texture = texture;
        this.cards[1].scale.set((this.scaleSize * (this.cardBackT.width / this.cards[1].texture.width)), (this.scaleSize * (this.cardBackT.height / this.cards[1].texture.height)));
    }
    updateHistoryWithNewResult(result) {
        //this.history.unshift(result);
        let temp = this.history;
        let newHistory = [];
        newHistory.push(result);
        for (let i = 0; i < temp.length; i++) {
            newHistory.push(temp[i]);
        }
        this.history = newHistory;
    }
    moveLastCards(callback) {
        let stopBorderX = this.historyContainer.x + (this.cardBackT.width * this.scaleSize);
        main_1.app.ticker.add(moveLastCardsAnimation, this);
        function moveLastCardsAnimation(timedelta) {
            if (this.historyContainer.x < stopBorderX) {
                this.historyContainer.x = Math.min(this.historyContainer.x + (2 * timedelta), stopBorderX);
            }
            else {
                main_1.app.ticker.remove(moveLastCardsAnimation, this);
                callback();
            }
        }
    }
    resetLastCards() {
        this.historyContainer.x -= (this.cardBackT.width * this.scaleSize);
        for (let i = 1; i <= this.cardsToShow + 1; i++) {
            if (i == 1) {
                this.cards[i].texture = this.cardBackT;
                this.cards[i].scale.set(this.scaleSize, this.scaleSize);
            }
            else
                this.cards[i].texture = this.getCardFaceTexture(this.history[i - 2][0], this.history[i - 2][1]);
        }
    }
}
exports.GambleHistory = GambleHistory;

},{"../main":28}],11:[function(require,module,exports){
/**
 * Created by tarasg on 9/28/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const counter_1 = require("../Utils/counter");
const main_1 = require("../main");
class NumericField {
    constructor(scene, textStyle, x, y, field_img, sound, x_delta = 0) {
        // enabled_img, dis_img, pressed_img:  PIXI.Textutre or string url to the image
        this.x = x;
        this.y = y;
        this.textStyle = textStyle;
        this.sound = sound;
        this.scene = scene;
        if (typeof field_img === "string") {
            this.fieldBackGround = PIXI.Texture.fromImage(field_img);
        }
        else {
            this.fieldBackGround = field_img;
        }
        this.fieldContainer = new PIXI.Container();
        this.fieldContainer.x = this.x;
        this.fieldContainer.y = this.y;
        this.sprite = new PIXI.Sprite(this.fieldBackGround);
        this.sprite.anchor.set(0.5, 0.5);
        this.sprite.x = this.sprite.width / 2;
        this.sprite.y = this.sprite.height / 2;
        this.fieldContainer.addChild(this.sprite);
        // add text
        this.text = new PIXI.Text('', this.textStyle);
        this.fieldContainer.addChild(this.text);
        this.text.anchor.set(0.5, 0.5);
        this.text.x = this.sprite.x + x_delta;
        this.text.y = this.sprite.y;
        this.scene.addChild(this.fieldContainer);
        // counter
        this.counter = new counter_1.CountUp(this.text, 0.0, 0.0, 2, 0.5, {});
        this.sprite.model = this;
    }
    addValue(value) {
        this.counter.update(this.counter.endVal + value / 100);
    }
    substractValue(value) {
        this.counter.update(this.counter.endVal - value / 100);
    }
    countTill(value) {
        this.counter.update(value / 100);
    }
    hide() {
        this.fieldContainer.visible = false;
    }
    show() {
        this.fieldContainer.visible = true;
    }
}
exports.NumericField = NumericField;
class BalanceFieldWithHideCreditsAnimation extends NumericField {
    constructor(scene, textStyle, x, y, field_img, sound, show_cr_img, hide_cr_img) {
        super(scene, textStyle, x, y, field_img, sound);
        if (typeof show_cr_img === "string" && typeof hide_cr_img === "string") {
            this.show_credits_texture = PIXI.Texture.fromImage(show_cr_img);
            this.hide_credits_texture = PIXI.Texture.fromImage(hide_cr_img);
        }
        else {
            this.show_credits_texture = show_cr_img;
            this.hide_credits_texture = hide_cr_img;
        }
        // add press to hide img text
        this.hide_credits_sprite = new PIXI.Sprite(this.hide_credits_texture);
        this.hide_credits_sprite.anchor.set(0.5, 0.5);
        this.hide_credits_sprite.x = this.sprite.width / 2;
        this.hide_credits_sprite.y = this.sprite.height / 2 + 25;
        this.fieldContainer.addChild(this.hide_credits_sprite);
        // add show credit image
        this.show_credits_sprite = new PIXI.Sprite(this.show_credits_texture);
        this.show_credits_sprite.anchor.set(0.5, 0.5);
        this.show_credits_sprite.x = this.show_credits_sprite.width / 2;
        this.show_credits_sprite.y = this.show_credits_sprite.height / 2 - this.show_credits_sprite.height;
        this.show_credits_sprite.interactive = true;
        this.show_credits_sprite.buttonMode = true;
        this.show_credits_sprite.on('pointerdown', function () {
            this.showCredits();
        }.bind(this));
        this.fieldContainer.addChild(this.show_credits_sprite);
        //    MASK:
        this.containerMask = new PIXI.Graphics();
        this.initializeMask();
        this.sprite.interactive = true;
        this.sprite.buttonMode = true;
        this.sprite.on('pointerdown', function () {
            this.hideCredits();
        }.bind(this));
    }
    initializeMask() {
        this.scene.addChild(this.containerMask);
        this.fieldContainer.mask = this.containerMask;
        this.containerMask.lineStyle(0);
        this.containerMask.x = this.fieldContainer.x;
        this.containerMask.y = this.fieldContainer.y;
        this.containerMask.beginFill(0x8bc5ff);
        let mask_x = this.show_credits_sprite.x - (this.show_credits_sprite.width / 2), mask_y = this.show_credits_sprite.y + (this.show_credits_sprite.height / 2);
        this.containerMask.drawRect(mask_x, mask_y, this.fieldContainer.width, this.show_credits_sprite.height);
        this.containerMask.endFill();
    }
    hideCredits() {
        main_1.app.ticker.add(hideCreditsAnimation, this);
        function hideCreditsAnimation(timedelta) {
            this.show_credits_sprite.interactive = false;
            this.sprite.interactive = false;
            if (this.show_credits_sprite.y < this.sprite.y) {
                this.show_credits_sprite.y = Math.min((this.show_credits_sprite.y + 5 * timedelta), this.sprite.y);
            }
            else {
                main_1.app.ticker.remove(hideCreditsAnimation, this);
                this.show_credits_sprite.interactive = true;
                this.sprite.interactive = true;
            }
        }
    }
    showCredits() {
        main_1.app.ticker.add(showCreditsAnimation, this);
        function showCreditsAnimation(timedelta) {
            this.show_credits_sprite.interactive = false;
            this.sprite.interactive = false;
            if (this.show_credits_sprite.y + this.show_credits_sprite.height > this.sprite.y) {
                this.show_credits_sprite.y -= 5 * timedelta;
            }
            else {
                this.show_credits_sprite.y = this.sprite.y - this.show_credits_sprite.height;
                main_1.app.ticker.remove(showCreditsAnimation, this);
                this.isShown = true;
                this.show_credits_sprite.interactive = true;
                this.sprite.interactive = true;
            }
        }
    }
}
exports.BalanceFieldWithHideCreditsAnimation = BalanceFieldWithHideCreditsAnimation;

},{"../Utils/counter":25,"../main":28}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TextContainer {
    constructor(scene, textStyle, x, y, field_img) {
        // enabled_img, dis_img, pressed_img:  PIXI.Textutre or string url to the image
        this.x = x;
        this.y = y;
        this.textStyle = textStyle;
        this.scene = scene;
        if (typeof field_img === "string") {
            this.fieldBackGround = PIXI.Texture.fromImage(field_img);
        }
        else {
            this.fieldBackGround = field_img;
        }
        this.fieldContainer = new PIXI.Container();
        this.sprite = new PIXI.Sprite(this.fieldBackGround);
        this.sprite.anchor.set(0.5, 0.5);
        this.sprite.x = this.x;
        this.sprite.y = this.y;
        this.fieldContainer.addChild(this.sprite);
        // add text
        this.text = new PIXI.Text('default', this.textStyle);
        this.fieldContainer.addChild(this.text);
        this.text.anchor.set(0.5, 0.5);
        this.text.x = this.x;
        this.text.y = this.y;
        this.scene.addChild(this.fieldContainer);
    }
    hide() {
        this.fieldContainer.visible = false;
    }
    show() {
        this.fieldContainer.visible = true;
    }
}
exports.TextContainer = TextContainer;

},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 9/27/2017.
 */
const Lines_1 = require("../Math/Lines");
class WinLineButton {
    constructor(scene, lineNumber, x, y, line_img, enabled_img, dis_img, pressed_img, sound, action) {
        // enabled_img, dis_img, pressed_img:  PIXI.Textutre or string url to the image
        this.lineNumber = lineNumber;
        this.x = x;
        this.y = y;
        this.sound = sound;
        this.scene = scene;
        if (typeof line_img === "string" && typeof enabled_img === "string" && typeof dis_img === "string" && typeof pressed_img === "string") {
            this.lineTexure = PIXI.Texture.fromImage(line_img);
            this.textureEnabled = PIXI.Texture.fromImage(enabled_img);
            this.textureDisabled = PIXI.Texture.fromImage(dis_img);
            this.texturePressed = PIXI.Texture.fromImage(pressed_img);
        }
        else {
            this.lineTexure = line_img;
            this.textureEnabled = enabled_img;
            this.textureDisabled = dis_img;
            this.texturePressed = pressed_img;
        }
        this.onClick = action;
        // Line Rope:
        let points = this.getLinePoints(Lines_1.WinLinesArray[this.lineNumber - 1]);
        this.lineRope = new PIXI.mesh.Rope(this.lineTexure, points);
        this.lineRope.visible = false;
        this.scene.addChild(this.lineRope);
        // Line Number Button
        this.sprite = new PIXI.Sprite(this.textureEnabled);
        this.sprite.interactive = true;
        this.sprite.buttonMode = true;
        this.isDown = false;
        this.state = 'enabled';
        this.sprite.anchor.set(0.5, 0.5);
        this.sprite.x = this.x;
        this.sprite.y = this.y;
        this.sprite.on('pointerdown', function () {
            this.isDown = true;
            this.sound.currentTime = 0;
            this.sound.play();
            this.sprite.texture = this.texturePressed;
            this.lineRope.visible = true;
        }.bind(this));
        this.sprite.on('pointerup', function () {
            this.lineRope.visible = false;
            this.sprite.texture = this.textureEnabled;
            if (this.isDown)
                this.onClick();
            this.isDown = false;
        }.bind(this));
        this.sprite.on('pointerout', function () {
            this.lineRope.visible = false;
            this.sprite.texture = this.textureEnabled;
            this.isDown = false;
        }.bind(this));
        this.scene.addChild(this.sprite);
        this.sprite.model = this;
    }
    getLinePoints(line) {
        let points = [];
        points.push(new PIXI.Point(this.x, this.y));
        if (this.x < Lines_1.PointsMatrix[0][0].x) {
            for (let i = 0; i < line.length; i++) {
                points.push(Lines_1.PointsMatrix[i][line[i]]);
            }
        }
        else {
            for (let i = line.length - 1; i >= 0; i--) {
                points.push(Lines_1.PointsMatrix[i][line[i]]);
            }
        }
        return points;
    }
    hide() {
        this.sprite.visible = false;
    }
    show() {
        this.sprite.visible = true;
    }
    disable() {
        this.state = 'disabled';
        this.sprite.texture = this.textureDisabled;
        this.sprite.interactive = false;
    }
    enable() {
        this.state = 'enabled';
        this.sprite.texture = this.textureEnabled;
        this.sprite.interactive = true;
    }
    setTextureToggled() {
        this.state = 'pressed';
        this.sprite.texture = this.texturePressed;
    }
    setTextureEnabled() {
        this.sprite.texture = this.textureEnabled;
    }
    setTextureDisabled() {
        this.sprite.texture = this.textureDisabled;
    }
}
exports.WinLineButton = WinLineButton;

},{"../Math/Lines":15}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Lines_1 = require("../Math/Lines");
const reelsConfig_1 = require("../ReelSpinner/reelsConfig");
const NumericField_1 = require("./NumericField");
const fontStyles_1 = require("../Utils/fontStyles");
const helperFuncs_1 = require("../Utils/helperFuncs");
/**
 * Created by tarasg on 10/17/2017.
 */
class WinLine {
    constructor(scene, LineNumber, WinLineTexture, WinBoxTexture, WinAmountFieldTexture, resources) {
        this.scene = scene;
        this.resources = resources;
        this.lineNumber = LineNumber;
        this.linePoints = [];
        this.currentWinSymbolsAmount = 0;
        this.lineNumberSprite = new PIXI.Sprite();
        this.WinLineTexture = WinLineTexture;
        this.WinBoxTexture = WinBoxTexture;
        this.WinAmountFieldTexture = WinAmountFieldTexture;
        this.winAmountF_y = Lines_1.PointsMatrix[2][1].y + this.WinBoxTexture.height / 2;
        this.winAmountF_x = Lines_1.PointsMatrix[2][1].x - WinAmountFieldTexture.width / 2;
        this.winAmountField = new NumericField_1.NumericField(scene, fontStyles_1.FontStyles.stakeFont, this.winAmountF_x, this.winAmountF_y, WinAmountFieldTexture, {});
        this.winAmountField.hide();
        this.winLineSounds = [
            new Audio(this.resources.bf_symbol.url),
            new Audio(this.resources.bf_symbol.url),
            new Audio(this.resources['7_symbol'].url),
            new Audio(this.resources.wm_symbol.url),
            new Audio(this.resources.plum_symbol.url),
            new Audio(this.resources.orange_symbol.url),
            new Audio(this.resources.lemon_symbol.url),
            new Audio(this.resources.cherry_symbol.url)
        ];
        this.winBoxes = [
            new PIXI.Sprite(WinBoxTexture),
            new PIXI.Sprite(WinBoxTexture),
            new PIXI.Sprite(WinBoxTexture),
            new PIXI.Sprite(WinBoxTexture),
            new PIXI.Sprite(WinBoxTexture)
        ];
        this.WinRopes = [
            new PIXI.mesh.Rope(WinLineTexture, []),
            new PIXI.mesh.Rope(WinLineTexture, []),
            new PIXI.mesh.Rope(WinLineTexture, []),
            new PIXI.mesh.Rope(WinLineTexture, []),
            new PIXI.mesh.Rope(WinLineTexture, [])
        ];
        this.line = Lines_1.WinLinesArray[LineNumber];
        // this.initializeLineNumber(LineNumber);
        this.initializeLine();
        this.initializeLineRope();
    }
    // private initializeLineNumber(LineNumber: number): void {
    //     this.lineNumberSprite.texture = LineNumbers[LineNumber].IdleTexture;
    //     this.scene.addChild(this.lineNumberSprite);
    //     this.lineNumberSprite.x = LineNumbers[LineNumber].x;
    //     this.lineNumberSprite.y = LineNumbers[LineNumber].y;
    // }
    initializeLine() {
        for (let i = 0; i < this.line.length; i++) {
            this.linePoints.push(Lines_1.PointsMatrix[i][this.line[i]]);
        }
    }
    initializeLineRope() {
        this.LineRope = new PIXI.mesh.Rope(this.WinLineTexture, this.linePoints);
        this.scene.addChild(this.LineRope);
        this.LineRope.visible = false;
    }
    showWinLine() {
        this.LineRope.visible = true;
        // this.lineNumberSprite.texture = LineNumbers[this.lineNumber].SelectedTexture;
    }
    hideWinLine() {
        this.LineRope.visible = false;
        // this.lineNumberSprite.texture = LineNumbers[this.lineNumber].IdleTexture;
    }
    disableWinLine() {
        // this.lineNumberSprite.texture = LineNumbers[this.lineNumber].DisabledTexture;
    }
    winShow(symbols, indexes, win, mainSymbol) {
        this.scene.winLinesArray[this.lineNumber].setTextureToggled();
        let amount = symbols.length;
        this.currentWinSymbolsAmount = amount;
        this.mainSymbol = mainSymbol;
        this.winLineSounds[mainSymbol].play();
        // Draw the end of the line
        if (amount < this.scene.REELS.reelsArray.length) {
            this.drawWinLineEnd(amount);
        }
        // Draw winning symbols and lines between them
        for (let i = 0; i < amount; i++) {
            if (i < amount - 1) {
                this.drawRope(i);
            }
            // Draw animation
            this.scene.REELS.reelsArray[i].playWinShow(symbols[i], indexes[i]);
            // Draw WinBoxes around symbols
            this.winBoxes[i].anchor.set(0.5, 0.5);
            this.winBoxes[i].x = Lines_1.PointsMatrix[i][indexes[i]].x;
            this.winBoxes[i].y = Lines_1.PointsMatrix[i][indexes[i]].y;
            this.winBoxes[i].visible = true;
            this.scene.addChild(this.winBoxes[i]);
        }
        // Draw WinLine Amount Field
        if (amount == 2) {
            this.winAmountField.fieldContainer.x = Lines_1.PointsMatrix[1][1].x - this.WinAmountFieldTexture.width / 2;
            this.winAmountField.fieldContainer.y = Lines_1.PointsMatrix[1][amount - 1].y + this.WinBoxTexture.height / 2;
        }
        else {
            this.winAmountField.fieldContainer.x = Lines_1.PointsMatrix[2][1].x - this.WinAmountFieldTexture.width / 2;
            this.winAmountField.fieldContainer.y = Lines_1.PointsMatrix[2][indexes[2]].y + this.WinBoxTexture.height / 2;
        }
        this.winAmountField.text.text = helperFuncs_1.formatStakeAmount(win);
        this.winAmountField.show();
    }
    stopWinShow() {
        this.winLineSounds[this.mainSymbol].pause();
        this.winLineSounds[this.mainSymbol].currentTime = 0;
        this.scene.winLinesArray[this.lineNumber].setTextureDisabled();
        for (let i = 0; i < this.currentWinSymbolsAmount; i++) {
            this.WinRopes[i].destroy();
            this.scene.REELS.reelsArray[i].stopWinShow(this.line[i]);
            this.winBoxes[i].visible = false;
        }
        this.winAmountField.hide();
    }
    drawWinLineEnd(amount) {
        let points = this.linePoints.slice(amount - 1);
        // set first point to the end of the last WinBox
        points[0] = this.getStartEndPoints(this.linePoints[amount - 1], this.linePoints[amount])[0];
        this.WinRopes[amount - 1] = new PIXI.mesh.Rope(this.WinLineTexture, points);
        this.scene.addChild(this.WinRopes[amount - 1]);
    }
    drawRope(index) {
        let points = this.getStartEndPoints(this.linePoints[index], this.linePoints[index + 1]);
        this.WinRopes[index] = new PIXI.mesh.Rope(this.WinLineTexture, points);
        this.scene.addChild(this.WinRopes[index]);
    }
    getStartEndPoints(point1, point2) {
        let A, B, C, k, b, result = [];
        A = point2.y - point1.y;
        B = point1.x - point2.x;
        C = point1.y * point2.x - point1.x * point2.y;
        k = (A / B) == 0 ? 0 : -(A / B);
        b = (C / B) == 0 ? 0 : -(C / B);
        // get coordinates of places where winLine can possibly intersect with WinBox where it starts
        let possibleStarts = [
            new PIXI.Point(Math.floor(point1.x + reelsConfig_1.symbolWidth / 2), Math.floor(k * (point1.x + reelsConfig_1.symbolWidth / 2) + b)),
            new PIXI.Point(Math.floor(((point1.y + reelsConfig_1.symbolHeight / 2) - b) / k), Math.floor(point1.y + reelsConfig_1.symbolHeight / 2)),
            new PIXI.Point(Math.floor(((point1.y - reelsConfig_1.symbolHeight / 2) - b) / k), Math.floor(point1.y - reelsConfig_1.symbolHeight / 2))
        ];
        // choose the one that lies on the egde of the Winbox
        for (let i = 0; i < 3; i++) {
            let point = possibleStarts[i];
            if (point.x <= Math.floor(point1.x + reelsConfig_1.symbolWidth / 2) && point.x >= point1.x && point.y <= Math.floor(point1.y + reelsConfig_1.symbolHeight / 2) && point.y >= Math.floor(point1.y - reelsConfig_1.symbolHeight / 2)) {
                point.y += Math.floor((reelsConfig_1.WinBoxHeight - reelsConfig_1.symbolHeight) / 2);
                result.push(point);
            }
        }
        // get coordinates of places where winLine can possibly intersect with WinBox where it ends
        let possibleEnds = [
            new PIXI.Point(Math.floor(point2.x - reelsConfig_1.symbolWidth / 2), Math.floor(k * (point2.x - reelsConfig_1.symbolWidth / 2) + b)),
            new PIXI.Point(Math.floor(((point2.y + reelsConfig_1.symbolHeight / 2) - b) / k), Math.floor(point2.y + reelsConfig_1.symbolHeight / 2)),
            new PIXI.Point(Math.floor(((point2.y - reelsConfig_1.symbolHeight / 2) - b) / k), Math.floor(point2.y - reelsConfig_1.symbolHeight / 2))
        ];
        // choose the one that lies on the egde of the Winbox
        for (let i = 0; i < 3; i++) {
            let point = possibleEnds[i];
            if (point.x >= Math.floor(point2.x - reelsConfig_1.symbolWidth / 2) && point.x <= point2.x && point.y <= Math.floor(point2.y + reelsConfig_1.symbolHeight / 2) && point.y >= Math.floor(point2.y - reelsConfig_1.symbolHeight / 2)) {
                point.x += Math.floor((reelsConfig_1.WinBoxWidth - reelsConfig_1.symbolWidth) / 2);
                point.y += Math.floor((reelsConfig_1.WinBoxHeight - reelsConfig_1.symbolHeight) / 2);
                result.push(point);
            }
        }
        return result;
    }
}
exports.WinLine = WinLine;

},{"../Math/Lines":15,"../ReelSpinner/reelsConfig":20,"../Utils/fontStyles":26,"../Utils/helperFuncs":27,"./NumericField":11}],15:[function(require,module,exports){
/**
 * Created by tarasg on 4/25/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LINE1 = [1, 1, 1, 1, 1], exports.LINE2 = [0, 0, 0, 0, 0], exports.LINE3 = [2, 2, 2, 2, 2], exports.LINE4 = [0, 1, 2, 1, 0], exports.LINE5 = [2, 1, 0, 1, 2], exports.LINE6 = [1, 0, 0, 0, 1], exports.LINE7 = [1, 2, 2, 2, 1], exports.LINE8 = [0, 0, 1, 2, 2], exports.LINE9 = [2, 2, 1, 0, 0], exports.LINE10 = [1, 2, 1, 0, 1], exports.LINE11 = [1, 0, 1, 2, 1], exports.LINE12 = [0, 1, 1, 1, 0], exports.LINE13 = [2, 1, 1, 1, 2], exports.LINE14 = [0, 1, 0, 1, 0], exports.LINE15 = [2, 1, 2, 1, 2], exports.LINE16 = [1, 1, 0, 1, 1], exports.LINE17 = [1, 1, 2, 1, 1], exports.LINE18 = [0, 0, 2, 0, 0], exports.LINE19 = [2, 2, 0, 2, 2], exports.LINE20 = [0, 2, 2, 2, 0];
exports.WinLinesArray = [exports.LINE1, exports.LINE2, exports.LINE3, exports.LINE4, exports.LINE5, exports.LINE6, exports.LINE7, exports.LINE8, exports.LINE9, exports.LINE10, exports.LINE11, exports.LINE12, exports.LINE13, exports.LINE14, exports.LINE15, exports.LINE16, exports.LINE17, exports.LINE18, exports.LINE19, exports.LINE20];
exports.PointsMatrix = [
    [new PIXI.Point(425, 250), new PIXI.Point(425, 480), new PIXI.Point(425, 725)],
    [new PIXI.Point(692, 250), new PIXI.Point(692, 480), new PIXI.Point(692, 725)],
    [new PIXI.Point(960, 250), new PIXI.Point(960, 480), new PIXI.Point(960, 725)],
    [new PIXI.Point(1230, 250), new PIXI.Point(1230, 480), new PIXI.Point(1230, 725)],
    [new PIXI.Point(1498, 250), new PIXI.Point(1498, 480), new PIXI.Point(1498, 725)]
];

},{}],16:[function(require,module,exports){
/**
 * Created by tarasg on 10/11/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Animations = require("../Utils/animation_objects");
const utils = require("../Utils/helperFuncs");
const config = require("./reelsConfig");
exports.SymbolsTexture = PIXI.BaseTexture.fromImage('../Media/symbols.png'), exports.BlazingTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 0, config.symbolWidth, config.symbolHeight)), exports.SevenTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 237, config.symbolWidth, config.symbolHeight)), exports.WatermelonTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 474, config.symbolWidth, config.symbolHeight)), exports.PlumTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 711, config.symbolWidth, config.symbolHeight)), exports.OrangeTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 948, config.symbolWidth, config.symbolHeight)), exports.LemonTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 1185, config.symbolWidth, config.symbolHeight)), exports.CherryTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 1422, config.symbolWidth, config.symbolHeight)), exports.BonusTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 1659, config.symbolWidth, config.symbolHeight)), exports.WildTexture = new PIXI.Texture(exports.SymbolsTexture, new PIXI.Rectangle(0, 1896, config.symbolWidth, config.symbolHeight)), exports.BlazingSpite = () => new PIXI.Sprite(exports.BlazingTexture), exports.SevenSpite = () => new PIXI.Sprite(exports.SevenTexture), exports.WatermelonSprite = () => new PIXI.Sprite(exports.WatermelonTexture), exports.PlumSprite = () => new PIXI.Sprite(exports.PlumTexture), exports.OrangeSprite = () => new PIXI.Sprite(exports.OrangeTexture), exports.LemonSprite = () => new PIXI.Sprite(exports.LemonTexture), exports.CherrySprite = () => new PIXI.Sprite(exports.CherryTexture), exports.BonusSprite = () => new PIXI.Sprite(exports.BonusTexture), exports.WildSprite = () => new PIXI.Sprite(exports.WildTexture), exports.BlazingWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/bf/winshowBF.png'), Animations.bf_winshow_anim), exports.SevenWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/seven/winshowSeven.png'), Animations.seven_winshow_anim), exports.WatermelonWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/wm/winshowWM.png'), Animations.wm_winshow_anim), exports.PlumWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/plum/winshowPlum.png'), Animations.plum_winshow_anim), exports.OrangeWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/orange/winshowOrange.png'), Animations.orange_winshow_anim), exports.LemonWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/lemon/winshowLemon.png'), Animations.lemon_winshow_anim), exports.CherryWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/cherry/winshowCherry.png'), Animations.cherry_winshow_anim), exports.BonusWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/bonus/winshowBonus.png'), Animations.bonus_winshow_anim), exports.WildWinShow = () => utils.CreateAnimation(PIXI.BaseTexture.fromImage('../Media/animations/winshow/wild/winshowWild.png'), Animations.wild_winshow_anim);
exports.WildSymbol = {
    name: 'WILD',
    reelValue: 0,
    texture: exports.WildTexture,
    sprite: exports.WildSprite,
    winShowAnimation: exports.WildWinShow
};
exports.BlazingSymbol = {
    name: 'LOGO',
    reelValue: 1,
    texture: exports.BlazingTexture,
    sprite: exports.BlazingSpite,
    winShowAnimation: exports.BlazingWinShow
};
exports.SevenSymbol = {
    name: 'SEVEN',
    reelValue: 2,
    texture: exports.SevenTexture,
    sprite: exports.SevenSpite,
    winShowAnimation: exports.SevenWinShow
};
exports.WatermelonSymbol = {
    name: 'WM',
    reelValue: 3,
    texture: exports.WatermelonTexture,
    sprite: exports.WatermelonSprite,
    winShowAnimation: exports.WatermelonWinShow
};
exports.PlumSymbol = {
    name: 'PLUM',
    reelValue: 4,
    texture: exports.PlumTexture,
    sprite: exports.PlumSprite,
    winShowAnimation: exports.PlumWinShow
};
exports.OrangeSymbol = {
    name: 'ORANGE',
    reelValue: 5,
    texture: exports.OrangeTexture,
    sprite: exports.OrangeSprite,
    winShowAnimation: exports.OrangeWinShow
};
exports.LemonSymbol = {
    name: 'LEMON',
    reelValue: 6,
    texture: exports.LemonTexture,
    sprite: exports.LemonSprite,
    winShowAnimation: exports.LemonWinShow
};
exports.CherrySymbol = {
    name: 'CHERRY',
    reelValue: 7,
    texture: exports.CherryTexture,
    sprite: exports.CherrySprite,
    winShowAnimation: exports.CherryWinShow
};
exports.BonusSymbol = {
    name: 'BONUS',
    reelValue: 8,
    texture: exports.BonusTexture,
    sprite: exports.BonusSprite,
    winShowAnimation: exports.BonusWinShow
};
exports.SYMBOLS = [exports.WildSymbol, exports.BlazingSymbol, exports.SevenSymbol, exports.WatermelonSymbol, exports.PlumSymbol, exports.OrangeSymbol, exports.LemonSymbol, exports.CherrySymbol, exports.BonusSymbol];
exports.showSymbols = [exports.BlazingSymbol, exports.SevenSymbol, exports.WatermelonSymbol, exports.PlumSymbol, exports.OrangeSymbol, exports.LemonSymbol, exports.CherrySymbol];

},{"../Utils/animation_objects":24,"../Utils/helperFuncs":27,"./reelsConfig":20}],17:[function(require,module,exports){
/**
 * Created by tarasg on 10/13/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config = require("../ReelSpinner/reelsConfig");
const MainRoundSymbols_1 = require("./MainRoundSymbols");
const main_1 = require("../main");
const ReelSets_1 = require("./ReelSets");
class ReelN {
    constructor(x, y, index, reelsContainer, resources) {
        this.x = x;
        this.y = y;
        this.index = index;
        this.symbolsAmount = config.ReelsConfig.reels[index].symbolsAmount;
        this.SpinningTime = config.ReelsConfig.reels[index].SpinningTime;
        this.SpinningSpeed = config.ReelsConfig.spinningSpeed;
        this.reelsContainer = reelsContainer;
        this.reelMask = new PIXI.Graphics();
        this.visibleSymbolsArray = [];
        this.reelValuesMath = ReelSets_1.ReelSet[index];
        this.spinningIndex = 0;
        this.tempReel = [];
        this.visibleSprites = [];
        this.winShowTime = 2000;
        this.reelStopSound = new Audio(resources.reelstop.url);
        this.isSlamout = false;
        this.InitializeReel();
        this.initializeMask();
    }
    getRandomSymbol() {
        return MainRoundSymbols_1.showSymbols[Math.floor(Math.random() * MainRoundSymbols_1.showSymbols.length)];
    }
    InitializeReel() {
        this.reelContainer = new PIXI.Container();
        this.reelContainer.x = this.x;
        this.reelContainer.y = this.y;
        this.y_delta = 0;
        this.reelSymbolsAmount = this.symbolsAmount + this.calculateSymbolsAmount();
        this.reelContStopY = (this.reelSymbolsAmount - this.symbolsAmount) * config.symbolHeight;
        for (let i = 0; i < this.reelSymbolsAmount; i++) {
            let symbol = this.getRandomSymbol(), sprite = symbol.sprite();
            sprite.y = config.symbolHeight * (this.symbolsAmount - i - 1);
            this.tempReel.push(sprite);
            this.reelContainer.addChildAt(sprite, i);
        }
        this.reelContainer.y += this.reelContStopY;
        this.reelsContainer.addChild(this.reelContainer);
    }
    initializeMask() {
        // creates mask around the reelContainer
        this.reelsContainer.addChild(this.reelMask);
        this.reelMask.lineStyle(0);
        this.reelContainer.mask = this.reelMask;
        this.reelMask.beginFill(0x8bc5ff, 0.1);
        this.reelMask.moveTo(this.x, this.y);
        this.reelMask.lineTo(this.x + config.symbolWidth, this.y);
        this.reelMask.lineTo(this.x + config.symbolWidth, (this.y + config.symbolHeight) * this.symbolsAmount);
        this.reelMask.lineTo(this.x, (this.y + config.symbolHeight) * this.symbolsAmount);
        this.reelMask.lineTo(this.x, this.y);
    }
    startSpinAnimation(stopSymbols) {
        this.stopSymbols = stopSymbols;
        main_1.app.ticker.add(animateStarSpin, this);
        let position = this.reelContainer.y;
        function animateStarSpin(timedelta) {
            if (this.reelContainer.y > position - config.StartAnimDelta) {
                this.reelContainer.y -= Math.floor(config.StartAnimSpeed * timedelta);
            }
            else {
                main_1.app.ticker.remove(animateStarSpin, this);
                this.spinAnimation(stopSymbols);
            }
        }
    }
    calculateSymbolsAmount() {
        let distancePX = config.ReelsConfig.spinningSpeed * 60 * (this.SpinningTime / 1000);
        return Math.floor(distancePX / config.symbolHeight);
    }
    slamOut() {
        this.isSlamout = true;
        this.reelContainer.y = this.reelContStopY;
    }
    swapCurrentVisibleTextures() {
        for (let i = 0; i < this.symbolsAmount; i++) {
            let texture = this.tempReel[this.tempReel.length - 1 - i].texture;
            this.tempReel[this.symbolsAmount - 1 - i].texture = texture;
        }
    }
    setStopSymbols(stopSymbols) {
        for (let i = 0; i < stopSymbols.length; i++) {
            let texture = MainRoundSymbols_1.SYMBOLS[stopSymbols[i]].texture;
            this.tempReel[this.reelSymbolsAmount - i - 1].texture = texture;
        }
    }
    spinAnimation(stopSymbols) {
        let self = this;
        this.isSlamout = false;
        // swap visible elements
        this.swapCurrentVisibleTextures();
        this.reelContainer.y -= this.reelContStopY;
        this.setStopSymbols(stopSymbols);
        main_1.app.ticker.add(animateSpin, this);
        function smoothStop() {
            let down = true, startY = self.reelContainer.y, stopY = self.reelContainer.y + config.ReelsConfig.reelStopDelta;
            main_1.app.ticker.add(stopAnimation, self);
            function stopAnimation(timedelta) {
                if (self.reelContainer.y < stopY && down) {
                    self.reelContainer.y += config.ReelsConfig.reelStopSpeed * timedelta;
                }
                else if (self.reelContainer.y >= stopY && down) {
                    down = false;
                    if (!this.isSlamout) {
                        this.reelStopSound.play();
                    }
                    else {
                        if (this.index == 0) {
                            this.reelStopSound.play();
                        }
                    }
                }
                else {
                    self.reelContainer.y = Math.max(self.reelContainer.y - Math.floor(config.ReelsConfig.reelStopDelta * timedelta * 0.1), startY);
                    if (self.reelContainer.y == startY) {
                        main_1.app.ticker.remove(stopAnimation, self);
                        if (self.index == 4) {
                            let event = new CustomEvent('LastReelStopped');
                            document.dispatchEvent(event);
                        }
                    }
                }
            }
            `  `;
        }
        function animateSpin(timedelta) {
            if (this.reelContainer.y < this.reelContStopY) {
                this.reelContainer.y = Math.min(this.reelContainer.y + Math.floor(timedelta * this.SpinningSpeed), this.reelContStopY);
            }
            else {
                main_1.app.ticker.remove(animateSpin, this);
                smoothStop();
            }
        }
    }
    playWinShow(symbol, index) {
        // hide symbol sprite
        this.tempReel[this.reelSymbolsAmount - index - 1].visible = false;
        // get symbol winshow animation
        let iSymbol = MainRoundSymbols_1.SYMBOLS[symbol];
        this.WinShowAnimation = iSymbol.winShowAnimation();
        this.reelContainer.addChild(this.WinShowAnimation);
        this.WinShowAnimation.y = this.tempReel[this.reelSymbolsAmount - index - 1].y;
        this.WinShowAnimation.loop = true;
        // this.WinShowAnimation.onComplete = function () {
        //     let winShowEndEvent = new CustomEvent('ReelWinShowAnimEnd', {'detail': {'reelIndex': this.index}});
        //     document.dispatchEvent(winShowEndEvent);
        // }.bind(this);
        this.WinShowAnimation.play();
        setTimeout(function () {
            let winShowEndEvent = new CustomEvent('ReelWinShowAnimEnd', { 'detail': { 'reelIndex': this.index } });
            document.dispatchEvent(winShowEndEvent);
        }.bind(this), this.winShowTime);
    }
    stopWinShow(index) {
        this.WinShowAnimation.stop();
        this.WinShowAnimation.visible = false;
        // show symbol sprite
        this.tempReel[this.reelSymbolsAmount - index - 1].visible = true;
    }
}
exports.ReelN = ReelN;

},{"../ReelSpinner/reelsConfig":20,"../main":28,"./MainRoundSymbols":16,"./ReelSets":18}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 10/11/2017.
 */
exports.ReelSet = [
    [6, 6, 2, 7, 7, 8, 5, 6, 7, 3, 5, 7, 6, 5, 3, 6, 6, 8, 7, 7, 4, 5, 6, 7, 5, 4, 1, 5, 5, 3, 7, 6, 5, 3, 6, 7, 5, 4, 7, 7, 8, 2, 6, 6, 1, 4, 6, 7, 5, 3],
    [7, 4, 2, 5, 7, 3, 6, 7, 2, 4, 6, 3, 7, 6, 1, 2, 7, 4, 5, 2, 7, 6, 4, 2, 7, 4, 3, 6, 7, 0, 4, 7, 6, 1, 4, 6, 7, 3, 6, 4, 7, 2, 5, 4, 3, 7, 1, 6, 2, 5],
    [6, 4, 2, 7, 7, 8, 5, 6, 7, 3, 5, 7, 6, 5, 3, 6, 4, 8, 7, 7, 4, 5, 3, 7, 5, 4, 1, 5, 4, 3, 7, 5, 5, 3, 6, 7, 5, 4, 7, 7, 8, 2, 6, 0, 1, 4, 6, 7, 5, 3],
    [7, 4, 2, 5, 7, 3, 6, 5, 1, 4, 5, 3, 7, 6, 1, 2, 7, 4, 5, 2, 7, 6, 5, 1, 7, 4, 3, 6, 7, 0, 5, 7, 6, 1, 4, 6, 7, 3, 6, 4, 5, 2, 5, 4, 3, 7, 1, 6, 2, 5],
    [6, 6, 2, 7, 7, 2, 4, 6, 7, 3, 5, 7, 6, 2, 3, 6, 6, 2, 7, 7, 4, 3, 6, 7, 5, 4, 1, 5, 5, 3, 7, 6, 4, 3, 6, 7, 2, 4, 7, 7, 8, 2, 6, 6, 1, 4, 6, 7, 5, 3]
];

},{}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const reelsConfig_1 = require("./reelsConfig");
const NewReel_1 = require("./NewReel");
class ReelSpinner {
    constructor(scene, resources) {
        this.scene = scene;
        this.resources = resources;
        this.reelsArray = [];
        this.reelSpinSound = new Audio(resources.reelspin.url);
        this.reelStopSound = new Audio(resources.reelstop.url);
        this.initializeReels();
    }
    initializeReels() {
        this.reelsContainer = new PIXI.Container();
        this.reelsContainer.x = reelsConfig_1.ReelsConfig.x;
        this.reelsContainer.y = reelsConfig_1.ReelsConfig.y;
        this.reelsDelay = reelsConfig_1.ReelsConfig.reelsDelay;
        for (let i = 0; i < reelsConfig_1.ReelsConfig.reels.length; i++) {
            let x = reelsConfig_1.ReelsConfig.reels[i].x, y = reelsConfig_1.ReelsConfig.reels[i].y;
            let reel = new NewReel_1.ReelN(x, y, i, this.reelsContainer, this.resources);
            this.reelsArray.push(reel);
        }
        this.scene.addChild(this.reelsContainer);
    }
    spin(results) {
        let reelsDelay = this.reelsDelay;
        this.reelSpinSound.currentTime = 0;
        this.reelSpinSound.play();
        for (let i = 0; i < this.reelsArray.length; i++) {
            let animation = this.reelsArray[i].startSpinAnimation.bind(this.reelsArray[i]);
            (function (i) {
                setTimeout(animation, reelsDelay * i, results[i]);
            })(i);
        }
    }
    slamout() {
        let reelsDelay = this.reelsDelay;
        this.reelSpinSound.pause();
        for (let i = 0; i < this.reelsArray.length; i++) {
            this.reelsArray[i].slamOut();
        }
    }
    signToEvents() {
        // TODO:
        //     document.addEventListener('StartButtonPressed')
    }
}
exports.ReelSpinner = ReelSpinner;

},{"./NewReel":17,"./reelsConfig":20}],20:[function(require,module,exports){
/**
 * Created by tarasg on 10/11/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WinBoxWidth = 254;
exports.WinBoxHeight = 244;
exports.symbolWidth = 247;
exports.symbolHeight = 237;
exports.LineNumberWidth = 83;
exports.LineNumberHeight = 73;
exports.StartAnimDelta = 50;
exports.StartAnimSpeed = 10;
exports.ReelsConfig = {
    x: 300,
    y: 130,
    reelsDelay: 50,
    reels: [
        { 'x': 0, 'y': 0, 'symbolsAmount': 3, 'SpinningTime': 1500 },
        { 'x': 268, 'y': 0, 'symbolsAmount': 3, 'SpinningTime': 1700 },
        { 'x': 538, 'y': 0, 'symbolsAmount': 3, 'SpinningTime': 1900 },
        { 'x': 806, 'y': 0, 'symbolsAmount': 3, 'SpinningTime': 2100 },
        { 'x': 1075, 'y': 0, 'symbolsAmount': 3, 'SpinningTime': 2300 },
    ],
    spinningSpeed: 35,
    slamOutAcceleration: 2.25,
    reelStopDelta: 25,
    reelStopSpeed: 5
};
exports.response = {
    "qualifier": "com.pt.casino.platform",
    "contextId": "r9tnvaajojyd3ni885mi",
    "correlationId": "9e0x7rl7nsi2z1y30udi",
    "data": {
        "_type": "com.pt.casino.platform.game.GameCommand",
        "windowId": "",
        "winAmount": 0,
        "gameData": {
            "_type": "ryota:GameResponse",
            "stake": 500,
            "totalWinAmount": 400,
            "playIndex": 1,
            "nextRound": "0",
            "winLineCount": 5,
            "isWinCapped": false,
            "playStack": [
                {
                    "round": "0",
                    "remainingPlayCount": 0,
                    "newPlayCount": 0,
                    "multiplier": 1,
                    "featureWinAmount": 400,
                    "gameWinAmount": 0,
                    "isLastPlayMode": true,
                    "isNextPlayMode": false,
                    "isWinCapped": false,
                    "lastPlayInModeData": {
                        "playWinAmount": 400,
                        "slotsData": {
                            "previousTransforms": [],
                            "actions": [
                                {
                                    "transforms": [
                                        {
                                            "ref": "spin",
                                            "symbolUpdates": [
                                                {
                                                    "symbol": 1,
                                                    "reelIndex": 0,
                                                    "positionOnReel": 0
                                                },
                                                {
                                                    "symbol": 6,
                                                    "reelIndex": 0,
                                                    "positionOnReel": 1
                                                },
                                                {
                                                    "symbol": 2,
                                                    "reelIndex": 0,
                                                    "positionOnReel": 2
                                                },
                                                {
                                                    "symbol": 6,
                                                    "reelIndex": 1,
                                                    "positionOnReel": 0
                                                },
                                                {
                                                    "symbol": 1,
                                                    "reelIndex": 1,
                                                    "positionOnReel": 1
                                                },
                                                {
                                                    "symbol": 2,
                                                    "reelIndex": 1,
                                                    "positionOnReel": 2
                                                },
                                                {
                                                    "symbol": 6,
                                                    "reelIndex": 2,
                                                    "positionOnReel": 0
                                                },
                                                {
                                                    "symbol": 5,
                                                    "reelIndex": 2,
                                                    "positionOnReel": 1
                                                },
                                                {
                                                    "symbol": 1,
                                                    "reelIndex": 2,
                                                    "positionOnReel": 2
                                                },
                                                {
                                                    "symbol": 6,
                                                    "reelIndex": 3,
                                                    "positionOnReel": 0
                                                },
                                                {
                                                    "symbol": 4,
                                                    "reelIndex": 3,
                                                    "positionOnReel": 1
                                                },
                                                {
                                                    "symbol": 0,
                                                    "reelIndex": 3,
                                                    "positionOnReel": 2
                                                },
                                                {
                                                    "symbol": 5,
                                                    "reelIndex": 4,
                                                    "positionOnReel": 0
                                                },
                                                {
                                                    "symbol": 0,
                                                    "reelIndex": 4,
                                                    "positionOnReel": 1
                                                },
                                                {
                                                    "symbol": 6,
                                                    "reelIndex": 4,
                                                    "positionOnReel": 2
                                                }
                                            ]
                                        }
                                    ],
                                    "payouts": []
                                },
                                {
                                    "transforms": [],
                                    "payouts": [
                                        {
                                            "payoutData": {
                                                "payoutWinAmount": 300,
                                                "payoutFreePlayResultsData": []
                                            },
                                            "context": {
                                                "winLineIndex": 4,
                                                "winningSymbols": [
                                                    {
                                                        "symbol": 1,
                                                        "reelIndex": 0,
                                                        "positionOnReel": 0
                                                    },
                                                    {
                                                        "symbol": 1,
                                                        "reelIndex": 1,
                                                        "positionOnReel": 1
                                                    },
                                                    {
                                                        "symbol": 1,
                                                        "reelIndex": 2,
                                                        "positionOnReel": 2
                                                    }
                                                ],
                                                "symbol": 1,
                                                "symbolPayoutType": "WinLine",
                                                "multiplier": 1
                                            }
                                        },
                                        {
                                            "payoutData": {
                                                "payoutWinAmount": 1000,
                                                "payoutFreePlayResultsData": []
                                            },
                                            "context": {
                                                "winLineIndex": 6,
                                                "winningSymbols": [
                                                    {
                                                        "symbol": 6,
                                                        "reelIndex": 0,
                                                        "positionOnReel": 1
                                                    },
                                                    {
                                                        "symbol": 6,
                                                        "reelIndex": 1,
                                                        "positionOnReel": 0
                                                    },
                                                    {
                                                        "symbol": 6,
                                                        "reelIndex": 2,
                                                        "positionOnReel": 0
                                                    },
                                                    {
                                                        "symbol": 6,
                                                        "reelIndex": 3,
                                                        "positionOnReel": 0
                                                    },
                                                    {
                                                        "symbol": 0,
                                                        "reelIndex": 4,
                                                        "positionOnReel": 1
                                                    }
                                                ],
                                                "symbol": 6,
                                                "symbolPayoutType": "WinLine",
                                                "multiplier": 1
                                            }
                                        },
                                        {
                                            "payoutData": {
                                                "payoutWinAmount": 1000,
                                                "payoutFreePlayResultsData": []
                                            },
                                            "context": {
                                                "winLineIndex": 19,
                                                "winningSymbols": [
                                                    {
                                                        "symbol": 2,
                                                        "reelIndex": 0,
                                                        "positionOnReel": 2
                                                    },
                                                    {
                                                        "symbol": 2,
                                                        "reelIndex": 1,
                                                        "positionOnReel": 2
                                                    },
                                                    {
                                                        "symbol": 2,
                                                        "reelIndex": 2,
                                                        "positionOnReel": 0
                                                    },
                                                    {
                                                        "symbol": 0,
                                                        "reelIndex": 3,
                                                        "positionOnReel": 2
                                                    }
                                                ],
                                                "symbol": 2,
                                                "symbolPayoutType": "WinLine",
                                                "multiplier": 1
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "modeType": "SLOTS"
                }
            ]
        },
        "stakeAmount": 500
    }
};

},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 9/25/2017.
 */
const Buttons_1 = require("../Layout/Buttons");
const WinLineButton_1 = require("../Layout/WinLineButton");
const ButtonEvents_1 = require("../Events/ButtonEvents");
const NumericField_1 = require("../Layout/NumericField");
const GambleCard_1 = require("../Layout/GambleCard");
const fontStyles_1 = require("../Utils/fontStyles");
const TextContainer_1 = require("../Layout/TextContainer");
const FruitObject_1 = require("../Bonus/FruitObject");
const BonusFinalResult_1 = require("../Bonus/BonusFinalResult");
const LineObject_1 = require("../Bonus/LineObject");
const ReelSpinner_1 = require("../ReelSpinner/ReelSpinner");
const WinLineClass_1 = require("../Layout/WinLineClass");
const main_1 = require("../main");
class BaseGameScene extends PIXI.Container {
    constructor(resources) {
        super();
        this.lineNumberWidth = 83;
        this.lineNumberHeight = 73;
        this.resources = resources;
        // backgorund
        this.sceneBackground = new PIXI.Sprite(resources.basegameBack.texture);
        this.addChild(this.sceneBackground);
        //Reels;
        this.REELS = new ReelSpinner_1.ReelSpinner(this, resources);
        // Control Buttons
        let buttonSound = main_1.SoundsManager.allSounds.buttonPress;
        this.startButton = new Buttons_1.Button(this, 1635, 960, resources.start.url, resources.start_dis.url, resources.start_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.StartButtonPressed);
        });
        this.stopButton = new Buttons_1.Button(this, 1635, 960, resources.stop.url, resources.stop_dis.url, resources.stop_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.StopButtonPressed);
        });
        this.collectButton = new Buttons_1.Button(this, 1635, 960, resources.collect.url, resources.collect_dis.url, resources.collect_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.CollectButtonPressed);
        });
        this.startBonusButton = new Buttons_1.Button(this, 1635, 960, resources.start_bonus.url, resources.start_bonus_dis.url, resources.start_bonus_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.StartBonusButtonPressed);
        });
        this.maxBetButton = new Buttons_1.Button(this, 1420, 960, resources.maxbet.url, resources.maxbet_dis.url, resources.maxbet_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.MaxBetButtonPressed);
        });
        this.autoStartButton = new Buttons_1.Button(this, 1205, 960, resources.auto_start.url, resources.auto_start_dis.url, resources.auto_start_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.AutoStartButtonPressed);
        });
        this.cancelAutoStartButton = new Buttons_1.Button(this, 1205, 960, resources.auto_start_stop.url, resources.auto_start_stop_dis.url, resources.auto_start_stop_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.CancelAutoStartButtonPressed);
        });
        this.menuButton = new Buttons_1.Button(this, 285, 1000, resources.menu.url, resources.menu_dis.url, resources.menu_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.MenuButtonPressed);
        });
        this.helpButton = new Buttons_1.Button(this, 450, 1000, resources.help.url, resources.help_dis.url, resources.help_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.HelpButtonPressed);
        });
        this.gambleButton = new Buttons_1.Button(this, 615, 1000, resources.gamble.url, resources.gamble_dis.url, resources.gamble_pressed.url, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.GambleButtonPressed);
        });
        this.balanceField = new NumericField_1.BalanceFieldWithHideCreditsAnimation(this, fontStyles_1.FontStyles.counterFont, 200, 865, resources.balance_field.texture, buttonSound, resources.show_cr_img.texture, resources.hide_cr_img.texture);
        this.totalWinField = new NumericField_1.NumericField(this, fontStyles_1.FontStyles.counterFont, 620, 865, resources.total_win_field.texture, buttonSound);
        this.stakeButton = new Buttons_1.DenominationPanelButton(this, 890, 1005, fontStyles_1.FontStyles.counterFont, fontStyles_1.FontStyles.stakeFont, resources.denomBottom.texture, resources.denomTop.texture, resources.denomMiddle.texture, resources.denomSel.texture, resources.bet.texture, resources.bet_dis.texture, resources.bet_pressed.texture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.BetButtonPressed);
        });
        // Winlines Buttons
        let winlinesTexture = PIXI.BaseTexture.fromImage(resources.line_buttons_20.url), winlinesTogTexture = PIXI.BaseTexture.fromImage(resources.line_buttons_20_tog.url);
        let linebutton1 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 5, this.lineNumberWidth, this.lineNumberHeight)), linebutton1_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 5, this.lineNumberWidth, this.lineNumberHeight)), linebutton2 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight, this.lineNumberWidth, this.lineNumberHeight)), linebutton2_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight, this.lineNumberWidth, this.lineNumberHeight)), linebutton3 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 8, this.lineNumberWidth, this.lineNumberHeight)), linebutton3_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 8, this.lineNumberWidth, this.lineNumberHeight)), linebutton4 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, 0, this.lineNumberWidth, this.lineNumberHeight)), linebutton4_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, 0, this.lineNumberWidth, this.lineNumberHeight)), linebutton5 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 9, this.lineNumberWidth, this.lineNumberHeight)), linebutton5_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 9, this.lineNumberWidth, this.lineNumberHeight)), linebutton6 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 4, this.lineNumberWidth, this.lineNumberHeight)), linebutton6_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 4, this.lineNumberWidth, this.lineNumberHeight)), linebutton7 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 5, this.lineNumberWidth, this.lineNumberHeight)), linebutton7_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 5, this.lineNumberWidth, this.lineNumberHeight)), linebutton8 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 7, this.lineNumberWidth, this.lineNumberHeight)), linebutton8_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 7, this.lineNumberWidth, this.lineNumberHeight)), linebutton9 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 2, this.lineNumberWidth, this.lineNumberHeight)), linebutton9_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 2, this.lineNumberWidth, this.lineNumberHeight)), linebutton10 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 4, this.lineNumberWidth, this.lineNumberHeight)), linebutton10_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 4, this.lineNumberWidth, this.lineNumberHeight)), linebutton11 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 6, this.lineNumberWidth, this.lineNumberHeight)), linebutton11_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 6, this.lineNumberWidth, this.lineNumberHeight)), linebutton12 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight, this.lineNumberWidth, this.lineNumberHeight)), linebutton12_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight, this.lineNumberWidth, this.lineNumberHeight)), linebutton13 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 8, this.lineNumberWidth, this.lineNumberHeight)), linebutton13_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 8, this.lineNumberWidth, this.lineNumberHeight)), linebutton14 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, 0, this.lineNumberWidth, this.lineNumberHeight)), linebutton14_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, 0, this.lineNumberWidth, this.lineNumberHeight)), linebutton15 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 9, this.lineNumberWidth, this.lineNumberHeight)), linebutton15_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 9, this.lineNumberWidth, this.lineNumberHeight)), linebutton16 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 3, this.lineNumberWidth, this.lineNumberHeight)), linebutton16_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 3, this.lineNumberWidth, this.lineNumberHeight)), linebutton17 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 7, this.lineNumberWidth, this.lineNumberHeight)), linebutton17_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 7, this.lineNumberWidth, this.lineNumberHeight)), linebutton18 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 3, this.lineNumberWidth, this.lineNumberHeight)), linebutton18_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 3, this.lineNumberWidth, this.lineNumberHeight)), linebutton19 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 6, this.lineNumberWidth, this.lineNumberHeight)), linebutton19_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(this.lineNumberWidth, this.lineNumberHeight * 6, this.lineNumberWidth, this.lineNumberHeight)), linebutton20 = new PIXI.Texture(winlinesTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 2, this.lineNumberWidth, this.lineNumberHeight)), linebutton20_tog = new PIXI.Texture(winlinesTogTexture, new PIXI.Rectangle(0, this.lineNumberHeight * 2, this.lineNumberWidth, this.lineNumberHeight));
        this.winline1 = new WinLineButton_1.WinLineButton(this, 1, 250, 525, resources.line1.texture, linebutton1, linebutton1, linebutton1_tog, buttonSound, function () {
            console.log("line1");
        });
        this.winShowLine1 = new WinLineClass_1.WinLine(this, 0, resources.line1.texture, resources.box1.texture, resources.winline_amount_field.texture, resources);
        this.winline2 = new WinLineButton_1.WinLineButton(this, 2, 250, 233, resources.line2.texture, linebutton2, linebutton2, linebutton2_tog, buttonSound, function () {
            console.log("line2");
        });
        this.winShowLine2 = new WinLineClass_1.WinLine(this, 1, resources.line2.texture, resources.box2.texture, resources.winline_amount_field.texture, resources);
        this.winline3 = new WinLineButton_1.WinLineButton(this, 3, 250, 744, resources.line3.texture, linebutton3, linebutton3, linebutton3_tog, buttonSound, function () {
            console.log("line3");
        });
        this.winShowLine3 = new WinLineClass_1.WinLine(this, 2, resources.line3.texture, resources.box3.texture, resources.winline_amount_field.texture, resources);
        this.winline4 = new WinLineButton_1.WinLineButton(this, 4, 250, 160, resources.line4.texture, linebutton4, linebutton4, linebutton4_tog, buttonSound, function () {
            console.log("line4");
        });
        this.winShowLine4 = new WinLineClass_1.WinLine(this, 3, resources.line4.texture, resources.box4.texture, resources.winline_amount_field.texture, resources);
        this.winline5 = new WinLineButton_1.WinLineButton(this, 5, 250, 817, resources.line5.texture, linebutton5, linebutton5, linebutton5_tog, buttonSound, function () {
            console.log("line5");
        });
        this.winShowLine5 = new WinLineClass_1.WinLine(this, 4, resources.line5.texture, resources.box5.texture, resources.winline_amount_field.texture, resources);
        this.winline6 = new WinLineButton_1.WinLineButton(this, 6, 1670, 452, resources.line6.texture, linebutton6, linebutton6, linebutton6_tog, buttonSound, function () {
            console.log("line6");
        });
        this.winShowLine6 = new WinLineClass_1.WinLine(this, 5, resources.line6.texture, resources.box6.texture, resources.winline_amount_field.texture, resources);
        this.winline7 = new WinLineButton_1.WinLineButton(this, 7, 1670, 525, resources.line7.texture, linebutton7, linebutton7, linebutton7_tog, buttonSound, function () {
            console.log("line7");
        });
        this.winShowLine7 = new WinLineClass_1.WinLine(this, 6, resources.line7.texture, resources.box7.texture, resources.winline_amount_field.texture, resources);
        this.winline8 = new WinLineButton_1.WinLineButton(this, 8, 1670, 671, resources.line8.texture, linebutton8, linebutton8, linebutton8_tog, buttonSound, function () {
            console.log("line8");
        });
        this.winShowLine8 = new WinLineClass_1.WinLine(this, 7, resources.line8.texture, resources.box8.texture, resources.winline_amount_field.texture, resources);
        this.winline9 = new WinLineButton_1.WinLineButton(this, 9, 1670, 306, resources.line9.texture, linebutton9, linebutton9, linebutton9_tog, buttonSound, function () {
            console.log("line9");
        });
        this.winShowLine9 = new WinLineClass_1.WinLine(this, 8, resources.line9.texture, resources.box9.texture, resources.winline_amount_field.texture, resources);
        this.winline10 = new WinLineButton_1.WinLineButton(this, 10, 250, 452, resources.line10.texture, linebutton10, linebutton10, linebutton10_tog, buttonSound, function () {
            console.log("line10");
        });
        this.winShowLine10 = new WinLineClass_1.WinLine(this, 9, resources.line10.texture, resources.box10.texture, resources.winline_amount_field.texture, resources);
        this.winline11 = new WinLineButton_1.WinLineButton(this, 11, 250, 598, resources.line11.texture, linebutton11, linebutton11, linebutton11_tog, buttonSound, function () {
            console.log("line11");
        });
        this.winShowLine11 = new WinLineClass_1.WinLine(this, 10, resources.line11.texture, resources.box11.texture, resources.winline_amount_field.texture, resources);
        this.winline12 = new WinLineButton_1.WinLineButton(this, 12, 1670, 233, resources.line12.texture, linebutton12, linebutton12, linebutton12_tog, buttonSound, function () {
            console.log("line12");
        });
        this.winShowLine12 = new WinLineClass_1.WinLine(this, 11, resources.line12.texture, resources.box12.texture, resources.winline_amount_field.texture, resources);
        this.winline13 = new WinLineButton_1.WinLineButton(this, 13, 1670, 745, resources.line13.texture, linebutton13, linebutton13, linebutton13_tog, buttonSound, function () {
            console.log("line13");
        });
        this.winShowLine13 = new WinLineClass_1.WinLine(this, 12, resources.line13.texture, resources.box13.texture, resources.winline_amount_field.texture, resources);
        this.winline14 = new WinLineButton_1.WinLineButton(this, 14, 1670, 161, resources.line14.texture, linebutton14, linebutton14, linebutton14_tog, buttonSound, function () {
            console.log("line14");
        });
        this.winShowLine14 = new WinLineClass_1.WinLine(this, 13, resources.line14.texture, resources.box14.texture, resources.winline_amount_field.texture, resources);
        this.winline15 = new WinLineButton_1.WinLineButton(this, 15, 1670, 817, resources.line15.texture, linebutton15, linebutton15, linebutton15_tog, buttonSound, function () {
            console.log("line15");
        });
        this.winShowLine15 = new WinLineClass_1.WinLine(this, 14, resources.line15.texture, resources.box15.texture, resources.winline_amount_field.texture, resources);
        this.winline16 = new WinLineButton_1.WinLineButton(this, 16, 250, 379, resources.line16.texture, linebutton16, linebutton16, linebutton16_tog, buttonSound, function () {
            console.log("line16");
        });
        this.winShowLine16 = new WinLineClass_1.WinLine(this, 15, resources.line16.texture, resources.box16.texture, resources.winline_amount_field.texture, resources);
        this.winline17 = new WinLineButton_1.WinLineButton(this, 17, 250, 671, resources.line17.texture, linebutton17, linebutton17, linebutton17_tog, buttonSound, function () {
            console.log("line17");
        });
        this.winShowLine17 = new WinLineClass_1.WinLine(this, 16, resources.line17.texture, resources.box17.texture, resources.winline_amount_field.texture, resources);
        this.winline18 = new WinLineButton_1.WinLineButton(this, 18, 1670, 379, resources.line18.texture, linebutton18, linebutton18, linebutton18_tog, buttonSound, function () {
            console.log("line18");
        });
        this.winShowLine18 = new WinLineClass_1.WinLine(this, 17, resources.line18.texture, resources.box18.texture, resources.winline_amount_field.texture, resources);
        this.winline19 = new WinLineButton_1.WinLineButton(this, 19, 1670, 598, resources.line19.texture, linebutton19, linebutton19, linebutton19_tog, buttonSound, function () {
            console.log("line19");
        });
        this.winShowLine19 = new WinLineClass_1.WinLine(this, 18, resources.line19.texture, resources.box19.texture, resources.winline_amount_field.texture, resources);
        this.winline20 = new WinLineButton_1.WinLineButton(this, 20, 250, 306, resources.line20.texture, linebutton20, linebutton20, linebutton20_tog, buttonSound, function () {
            console.log("line20");
        });
        this.winShowLine20 = new WinLineClass_1.WinLine(this, 19, resources.line20.texture, resources.box20.texture, resources.winline_amount_field.texture, resources);
        this.winShowLineArray = [this.winShowLine1, this.winShowLine2, this.winShowLine3, this.winShowLine4, this.winShowLine5,
            this.winShowLine6, this.winShowLine7, this.winShowLine8, this.winShowLine9, this.winShowLine10, this.winShowLine11,
            this.winShowLine12, this.winShowLine13, this.winShowLine14, this.winShowLine15, this.winShowLine16, this.winShowLine17,
            this.winShowLine18, this.winShowLine19, this.winShowLine20];
        this.winLinesArray = [this.winline1, this.winline2, this.winline3, this.winline4, this.winline5, this.winline6,
            this.winline7, this.winline8, this.winline9, this.winline10, this.winline11, this.winline12,
            this.winline13, this.winline14, this.winline15, this.winline16, this.winline17, this.winline18,
            this.winline19, this.winline20];
        this.interactive = true;
        this.on('pointerdown', function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.ClickedOnBaseGameScene);
            let skipWInshow = new CustomEvent('skipWinShow');
            document.dispatchEvent(skipWInshow);
        });
    }
}
exports.BaseGameScene = BaseGameScene;
class BonusGameScene extends PIXI.Container {
    constructor(resources) {
        super();
        this.cherryLine = new LineObject_1.LineObject();
        this.lemonLine = new LineObject_1.LineObject();
        this.plumLine = new LineObject_1.LineObject();
        this.orangeLine = new LineObject_1.LineObject();
        this.wmLine = new LineObject_1.LineObject();
        this.resources = resources;
        this.sceneBackground = new PIXI.Sprite(resources.bonusback.texture);
        this.addChild(this.sceneBackground);
        let buttonSound = new Audio(resources.test.url);
        this.cherry1 = new FruitObject_1.FruitObject(this, 725, 750, 0, 4, resources);
        this.cherry2 = new FruitObject_1.FruitObject(this, 945, 750, 0, 4, resources);
        this.cherryLine.addElements(this.cherry1, this.cherry2);
        this.lemon1 = new FruitObject_1.FruitObject(this, 615, 600, 0, 3, resources);
        this.lemon2 = new FruitObject_1.FruitObject(this, 835, 600, 0, 3, resources);
        this.lemon3 = new FruitObject_1.FruitObject(this, 1055, 600, 0, 3, resources);
        this.lemonLine.addElements(this.lemon1, this.lemon2, this.lemon3);
        this.orange1 = new FruitObject_1.FruitObject(this, 505, 450, 0, 2, resources);
        this.orange2 = new FruitObject_1.FruitObject(this, 730, 450, 0, 2, resources);
        this.orange3 = new FruitObject_1.FruitObject(this, 945, 450, 0, 2, resources);
        this.orange4 = new FruitObject_1.FruitObject(this, 1165, 450, 0, 2, resources);
        this.orangeLine.addElements(this.orange1, this.orange2, this.orange3, this.orange4);
        this.plum1 = new FruitObject_1.FruitObject(this, 395, 300, 0, 1, resources);
        this.plum2 = new FruitObject_1.FruitObject(this, 615, 300, 0, 1, resources);
        this.plum3 = new FruitObject_1.FruitObject(this, 835, 300, 0, 1, resources);
        this.plum4 = new FruitObject_1.FruitObject(this, 1055, 300, 0, 1, resources);
        this.plum5 = new FruitObject_1.FruitObject(this, 1275, 300, 0, 1, resources);
        this.plumLine.addElements(this.plum1, this.plum2, this.plum3, this.plum4, this.plum5);
        this.wm1 = new FruitObject_1.FruitObject(this, 285, 150, 0, 0, resources);
        this.wm2 = new FruitObject_1.FruitObject(this, 505, 150, 0, 0, resources);
        this.wm3 = new FruitObject_1.FruitObject(this, 725, 150, 0, 0, resources);
        this.wm4 = new FruitObject_1.FruitObject(this, 945, 150, 0, 0, resources);
        this.wm5 = new FruitObject_1.FruitObject(this, 1165, 150, 0, 0, resources);
        this.wm6 = new FruitObject_1.FruitObject(this, 1385, 150, 0, 0, resources);
        this.wmLine.addElements(this.wm1, this.wm2, this.wm3, this.wm4, this.wm5, this.wm6);
        this.bonusWinField = new NumericField_1.NumericField(this, fontStyles_1.FontStyles.BonusCounterFont, 960, 75, resources.bonusWinField.texture, buttonSound, 200); // TODO CHANGE x and y
        this.endBonusDialog = new BonusFinalResult_1.BonusFinalResultWindow(this, fontStyles_1.FontStyles.BonusFinalCounterFont, 460, -600, resources, buttonSound); // TODO CHANGE x and y
    }
}
exports.BonusGameScene = BonusGameScene;
class MainHelpScene extends PIXI.Container {
    constructor(resources) {
        super();
        this.resources = resources;
        //background
        this.sceneBackground = new PIXI.Sprite(resources.main_help_page.texture);
        this.addChild(this.sceneBackground);
        //buttons:
        let buttonSound = new Audio(resources.test.url);
        // enabled
        let buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons.url), exitHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), prevHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 122, 178, 115)), nextHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        //pressed
        let pr_buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons_pressed.url), pr_exitHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), pr_prevHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 123, 178, 115)), pr_nextHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        this.nextPageButton = new Buttons_1.Button(this, 1765, 1015, nextHelpTexture, nextHelpTexture, pr_nextHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.NextHelpPageButtonPressed);
        });
        this.prevPageButton = new Buttons_1.Button(this, 1570, 1015, prevHelpTexture, prevHelpTexture, pr_prevHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.PrevHelpPageButtonPressed);
        });
        this.exitHelpButton = new Buttons_1.Button(this, 220, 1015, exitHelpTexture, exitHelpTexture, pr_exitHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.ExitHelpButtonPressed);
        });
    }
}
exports.MainHelpScene = MainHelpScene;
class BonusHelpScene extends PIXI.Container {
    constructor(resources) {
        super();
        this.resources = resources;
        //background
        this.sceneBackground = new PIXI.Sprite(resources.bonus_help_page.texture);
        this.addChild(this.sceneBackground);
        //buttons:
        let buttonSound = new Audio(resources.test.url);
        // enabled
        let buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons.url), exitHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), prevHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 122, 178, 115)), nextHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        //pressed
        let pr_buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons_pressed.url), pr_exitHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), pr_prevHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 123, 178, 115)), pr_nextHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        this.nextPageButton = new Buttons_1.Button(this, 1765, 1015, nextHelpTexture, nextHelpTexture, pr_nextHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.NextHelpPageButtonPressed);
        });
        this.prevPageButton = new Buttons_1.Button(this, 1570, 1015, prevHelpTexture, prevHelpTexture, pr_prevHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.PrevHelpPageButtonPressed);
        });
        this.exitHelpButton = new Buttons_1.Button(this, 220, 1015, exitHelpTexture, exitHelpTexture, pr_exitHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.ExitHelpButtonPressed);
        });
    }
}
exports.BonusHelpScene = BonusHelpScene;
class GambleHelpScene extends PIXI.Container {
    constructor(resources) {
        super();
        this.resources = resources;
        //background
        this.sceneBackground = new PIXI.Sprite(resources.gamble_help_page.texture);
        this.addChild(this.sceneBackground);
        //buttons:
        let buttonSound = new Audio(resources.test.url);
        // enabled
        let buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons.url), exitHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), prevHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 122, 178, 115)), nextHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        //pressed
        let pr_buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons_pressed.url), pr_exitHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), pr_prevHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 123, 178, 115)), pr_nextHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        this.nextPageButton = new Buttons_1.Button(this, 1765, 1015, nextHelpTexture, nextHelpTexture, pr_nextHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.NextHelpPageButtonPressed);
        });
        this.prevPageButton = new Buttons_1.Button(this, 1570, 1015, prevHelpTexture, prevHelpTexture, pr_prevHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.PrevHelpPageButtonPressed);
        });
        this.exitHelpButton = new Buttons_1.Button(this, 220, 1015, exitHelpTexture, exitHelpTexture, pr_exitHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.ExitHelpButtonPressed);
        });
    }
}
exports.GambleHelpScene = GambleHelpScene;
class WinLinesHelpScene extends PIXI.Container {
    constructor(resources) {
        super();
        this.resources = resources;
        //background
        this.sceneBackground = new PIXI.Sprite(resources.lines_help_page.texture);
        this.addChild(this.sceneBackground);
        //buttons:
        let buttonSound = new Audio(resources.test.url);
        // enabled
        let buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons.url), exitHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), prevHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 122, 178, 115)), nextHelpTexture = new PIXI.Texture(buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        //pressed
        let pr_buttonsBaseTexture = PIXI.BaseTexture.fromImage(resources.inhelp_buttons_pressed.url), pr_exitHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(0, 3, 335, 115)), pr_prevHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 123, 178, 115)), pr_nextHelpTexture = new PIXI.Texture(pr_buttonsBaseTexture, new PIXI.Rectangle(3, 240, 178, 115));
        this.nextPageButton = new Buttons_1.Button(this, 1765, 1015, nextHelpTexture, nextHelpTexture, pr_nextHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.NextHelpPageButtonPressed);
        });
        this.prevPageButton = new Buttons_1.Button(this, 1570, 1015, prevHelpTexture, prevHelpTexture, pr_prevHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.PrevHelpPageButtonPressed);
        });
        this.exitHelpButton = new Buttons_1.Button(this, 220, 1015, exitHelpTexture, exitHelpTexture, pr_exitHelpTexture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.ExitHelpButtonPressed);
        });
    }
}
exports.WinLinesHelpScene = WinLinesHelpScene;
class GambleScene extends PIXI.Container {
    constructor(resources) {
        super();
        this.resources = resources;
        //background
        this.sceneBackground = new PIXI.Sprite(resources.gamble_bg.texture);
        this.addChild(this.sceneBackground);
        //buttons:
        let buttonSound = new Audio(resources.test.url);
        // enabled
        this.collectButton = new Buttons_1.Button(this, 960, 1000, resources.gamble_collect.texture, resources.gamble_collect_dis.texture, resources.gamble_collect_pressed.texture, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.GambleCollectPressed);
        });
        //enabled RedBlack
        let redBlackBase = PIXI.BaseTexture.fromImage(resources.red_black.url), red = new PIXI.Texture(redBlackBase, new PIXI.Rectangle(0, 0, 303, 303)), black = new PIXI.Texture(redBlackBase, new PIXI.Rectangle(0, 303, 303, 303));
        //dis RedBlack
        let redBlackDisBase = PIXI.BaseTexture.fromImage(resources.red_black_dis.url), red_dis = new PIXI.Texture(redBlackDisBase, new PIXI.Rectangle(0, 0, 303, 303)), black_dis = new PIXI.Texture(redBlackDisBase, new PIXI.Rectangle(0, 303, 303, 303));
        let redBlackPresBase = PIXI.BaseTexture.fromImage(resources.red_black_pressed.url), red_pressed = new PIXI.Texture(redBlackPresBase, new PIXI.Rectangle(0, 0, 303, 303)), black_pressed = new PIXI.Texture(redBlackPresBase, new PIXI.Rectangle(0, 303, 303, 303));
        this.redButton = new Buttons_1.Button(this, 600, 550, red_pressed, red_dis, red, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.GambleRedPressed);
        });
        this.blackButton = new Buttons_1.Button(this, 1300, 550, black_pressed, black_dis, black, buttonSound, function () {
            document.dispatchEvent(ButtonEvents_1.ButtonEvents.GambleBlackPressed);
        });
        this.bankField = new NumericField_1.NumericField(this, fontStyles_1.FontStyles.GambleText, 632, 851, resources.bank_bg.texture, buttonSound);
        this.doubleToField = new NumericField_1.NumericField(this, fontStyles_1.FontStyles.GambleText, 962, 851, resources.bank_bg.texture, buttonSound);
        this.gambleCard = new GambleCard_1.GambleCard(this, 950, 550, resources.cardback.url, resources.cards.url);
        this.gambleHistory = new GambleCard_1.GambleHistory(this, 840, 250, 0.2, 5, resources.cardback.url, resources.cards.url);
        this.textField = new TextContainer_1.TextContainer(this, fontStyles_1.FontStyles.GambleText, 960, 760, resources.gamble_text_bg.texture);
    }
}
exports.GambleScene = GambleScene;

},{"../Bonus/BonusFinalResult":1,"../Bonus/FruitObject":2,"../Bonus/LineObject":3,"../Events/ButtonEvents":8,"../Layout/Buttons":9,"../Layout/GambleCard":10,"../Layout/NumericField":11,"../Layout/TextContainer":12,"../Layout/WinLineButton":13,"../Layout/WinLineClass":14,"../ReelSpinner/ReelSpinner":19,"../Utils/fontStyles":26,"../main":28}],22:[function(require,module,exports){
/**
 * Created by tarasg on 9/25/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SceneManager {
    constructor(app) {
        this.containers = {};
        this.app = app;
    }
    AddGameScene(id, gameScene) {
        this.containers[id] = gameScene;
        gameScene.visible = false;
        this.app.stage.addChild(gameScene);
    }
    goToGameScene(id) {
        if (this.currentScene) {
            this.currentScene.visible = false;
        }
        this.containers[id].visible = true;
        this.currentScene = this.containers[id];
        this.currentSceneId = id;
    }
}
exports.SceneManager = SceneManager;

},{}],23:[function(require,module,exports){
/**
 * Created by tarasg on 10/23/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SoundsManagerClass {
    constructor(resources) {
        this.allSounds = {};
        this.resources = resources;
        this.allSounds['buttonPress'] = new Howl({
            src: [this.resources.test.url],
            loop: false,
            volume: 0.5
        });
    }
}
exports.SoundsManagerClass = SoundsManagerClass;

},{}],24:[function(require,module,exports){
/**
 * Created by tarasg on 10/6/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by tarasg on 3/21/2017.
 */
exports.cherry_anim_obj = [
    { "name": "cherry_burn__320x300_000", "x": 0, "y": 301, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_001", "x": 642, "y": 903, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_002", "x": 321, "y": 0, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_003", "x": 321, "y": 301, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_004", "x": 0, "y": 602, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_005", "x": 321, "y": 602, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_006", "x": 642, "y": 0, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_007", "x": 642, "y": 301, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_008", "x": 642, "y": 602, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_009", "x": 0, "y": 903, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_010", "x": 963, "y": 0, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_011", "x": 321, "y": 903, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_012", "x": 0, "y": 0, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_013", "x": 963, "y": 301, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_014", "x": 963, "y": 602, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_015", "x": 963, "y": 903, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_016", "x": 0, "y": 1204, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_017", "x": 642, "y": 1204, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_018", "x": 321, "y": 1204, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_019", "x": 963, "y": 1204, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_020", "x": 1284, "y": 0, "width": 320, "height": 300 },
    { "name": "cherry_burn__320x300_021", "x": 1284, "y": 301, "width": 320, "height": 300 }
];
exports.lemon_anim_obj = [
    { "name": "lemon_burn__320x300_000", "x": 0, "y": 301, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_001", "x": 642, "y": 903, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_002", "x": 321, "y": 0, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_003", "x": 321, "y": 301, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_004", "x": 0, "y": 602, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_005", "x": 321, "y": 602, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_006", "x": 642, "y": 0, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_007", "x": 642, "y": 301, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_008", "x": 642, "y": 602, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_009", "x": 0, "y": 903, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_010", "x": 321, "y": 903, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_011", "x": 0, "y": 0, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_012", "x": 963, "y": 0, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_013", "x": 963, "y": 301, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_014", "x": 963, "y": 602, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_015", "x": 963, "y": 903, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_016", "x": 0, "y": 1204, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_017", "x": 321, "y": 1204, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_018", "x": 642, "y": 1204, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_019", "x": 963, "y": 1204, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_020", "x": 1284, "y": 0, "width": 320, "height": 300 },
    { "name": "lemon_burn__320x300_021", "x": 1284, "y": 301, "width": 320, "height": 300 }
];
exports.orange_anim_obj = [
    { "name": "orange_burn__320x300_000", "x": 0, "y": 301, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_001", "x": 642, "y": 903, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_002", "x": 321, "y": 0, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_003", "x": 321, "y": 301, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_004", "x": 0, "y": 602, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_005", "x": 321, "y": 602, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_006", "x": 642, "y": 0, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_007", "x": 642, "y": 301, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_008", "x": 642, "y": 602, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_009", "x": 0, "y": 903, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_010", "x": 321, "y": 903, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_011", "x": 0, "y": 0, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_012", "x": 963, "y": 0, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_013", "x": 963, "y": 301, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_014", "x": 963, "y": 602, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_015", "x": 963, "y": 903, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_016", "x": 642, "y": 1204, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_017", "x": 963, "y": 1204, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_018", "x": 0, "y": 1204, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_019", "x": 321, "y": 1204, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_020", "x": 1284, "y": 0, "width": 320, "height": 300 },
    { "name": "orange_burn__320x300_021", "x": 1284, "y": 301, "width": 320, "height": 300 }
];
exports.plum_anim_obj = [
    { "name": "plum_burn__320x300_000", "x": 0, "y": 301, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_001", "x": 642, "y": 903, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_002", "x": 321, "y": 0, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_003", "x": 321, "y": 301, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_004", "x": 0, "y": 602, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_005", "x": 321, "y": 602, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_006", "x": 642, "y": 0, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_007", "x": 642, "y": 301, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_008", "x": 642, "y": 602, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_009", "x": 0, "y": 903, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_010", "x": 321, "y": 903, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_011", "x": 0, "y": 0, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_012", "x": 963, "y": 0, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_013", "x": 963, "y": 301, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_014", "x": 963, "y": 602, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_015", "x": 963, "y": 903, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_016", "x": 1284, "y": 0, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_017", "x": 1284, "y": 301, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_018", "x": 0, "y": 1204, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_019", "x": 321, "y": 1204, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_020", "x": 642, "y": 1204, "width": 320, "height": 300 },
    { "name": "plum_burn__320x300_021", "x": 963, "y": 1204, "width": 320, "height": 300 }
];
exports.waterm_anim_obj = [
    { "name": "watermelon_burn__320x300_000", "x": 0, "y": 301, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_001", "x": 642, "y": 903, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_002", "x": 321, "y": 0, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_003", "x": 321, "y": 301, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_004", "x": 0, "y": 602, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_005", "x": 321, "y": 602, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_006", "x": 642, "y": 0, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_007", "x": 642, "y": 301, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_008", "x": 642, "y": 602, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_009", "x": 0, "y": 0, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_010", "x": 963, "y": 0, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_011", "x": 0, "y": 903, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_012", "x": 321, "y": 903, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_013", "x": 963, "y": 301, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_014", "x": 963, "y": 602, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_015", "x": 963, "y": 903, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_016", "x": 0, "y": 1204, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_017", "x": 321, "y": 1204, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_018", "x": 642, "y": 1204, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_019", "x": 963, "y": 1204, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_020", "x": 1284, "y": 0, "width": 320, "height": 300 },
    { "name": "watermelon_burn__320x300_021", "x": 1284, "y": 301, "width": 320, "height": 300 }
];
/* WIN SHOW*/
exports.wild_winshow_anim = [
    { "name": "wild_icon__247x237_000", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_001", "x": 496, "y": 476, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_002", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_006", "x": 496, "y": 0, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_007", "x": 496, "y": 238, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_008", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_009", "x": 248, "y": 714, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_010", "x": 744, "y": 238, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_011", "x": 744, "y": 476, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_012", "x": 744, "y": 714, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_013", "x": 0, "y": 952, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_014", "x": 496, "y": 714, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_015", "x": 744, "y": 0, "width": 247, "height": 237 },
    { "name": "wild_icon__247x237_016", "x": 0, "y": 714, "width": 247, "height": 237 }
];
exports.seven_winshow_anim = [
    { "name": "seven_zoom__247x237_000", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "seven_zoom__247x237_001", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "seven_zoom__247x237_002", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "seven_zoom__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "seven_zoom__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "seven_zoom__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 }
];
exports.wm_winshow_anim = [
    { "name": "watermelon_zoom__247x237_000", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "watermelon_zoom__247x237_001", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "watermelon_zoom__247x237_002", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "watermelon_zoom__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "watermelon_zoom__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "watermelon_zoom__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 }
];
exports.bf_winshow_anim = [
    { "name": "blazingfruitsicon__247x237_000", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_001", "x": 1984, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_002", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_006", "x": 496, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_007", "x": 496, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_008", "x": 496, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_009", "x": 0, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_010", "x": 248, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_011", "x": 496, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_012", "x": 744, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_013", "x": 744, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_014", "x": 744, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_015", "x": 744, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_016", "x": 0, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_017", "x": 248, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_018", "x": 496, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_019", "x": 744, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_020", "x": 992, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_021", "x": 992, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_022", "x": 992, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_023", "x": 992, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_024", "x": 992, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_025", "x": 0, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_026", "x": 248, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_027", "x": 496, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_028", "x": 744, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_029", "x": 992, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_030", "x": 1240, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_031", "x": 1240, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_032", "x": 1240, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_033", "x": 1240, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_034", "x": 1240, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_035", "x": 1240, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_036", "x": 0, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_037", "x": 248, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_038", "x": 496, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_039", "x": 744, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_040", "x": 992, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_041", "x": 1240, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_042", "x": 1488, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_043", "x": 1488, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_044", "x": 1488, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_045", "x": 1488, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_046", "x": 1488, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_047", "x": 1488, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_048", "x": 1488, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_049", "x": 0, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_050", "x": 248, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_051", "x": 496, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_052", "x": 744, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_053", "x": 992, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_054", "x": 1240, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_055", "x": 1488, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_056", "x": 1736, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_057", "x": 1736, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_058", "x": 1736, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_059", "x": 1736, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_060", "x": 1736, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_061", "x": 1736, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_062", "x": 1736, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_063", "x": 1736, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_064", "x": 0, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_065", "x": 248, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_066", "x": 496, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_067", "x": 744, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_068", "x": 992, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_069", "x": 1240, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_070", "x": 1488, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_071", "x": 1736, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_072", "x": 1984, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_073", "x": 1984, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_074", "x": 1984, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_075", "x": 1984, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_076", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_077", "x": 1984, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_078", "x": 1984, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_079", "x": 1984, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_080", "x": 1984, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_081", "x": 0, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_082", "x": 248, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_083", "x": 496, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_084", "x": 744, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_085", "x": 992, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_086", "x": 1240, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_087", "x": 1488, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_088", "x": 1736, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_089", "x": 1984, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_090", "x": 2232, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_091", "x": 2232, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_092", "x": 2232, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_093", "x": 2232, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_094", "x": 2232, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_095", "x": 2232, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_096", "x": 2232, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_097", "x": 2232, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_098", "x": 2232, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_099", "x": 2232, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_100", "x": 0, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_101", "x": 248, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_102", "x": 496, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_103", "x": 744, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_104", "x": 992, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_105", "x": 1240, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_106", "x": 1488, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_107", "x": 1736, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_108", "x": 1984, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_109", "x": 2232, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_110", "x": 2480, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_111", "x": 2480, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_112", "x": 2480, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_113", "x": 2480, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_114", "x": 2480, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_115", "x": 2480, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_116", "x": 2480, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_117", "x": 2480, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_118", "x": 2480, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_119", "x": 2480, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_120", "x": 2480, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_121", "x": 0, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_122", "x": 248, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_123", "x": 496, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_124", "x": 744, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_125", "x": 992, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_126", "x": 1240, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_127", "x": 1488, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_128", "x": 1736, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_129", "x": 1984, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_130", "x": 2232, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_131", "x": 2480, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_132", "x": 2728, "y": 0, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_133", "x": 2728, "y": 238, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_134", "x": 2728, "y": 476, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_135", "x": 2728, "y": 714, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_136", "x": 2728, "y": 952, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_137", "x": 2728, "y": 1190, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_138", "x": 2728, "y": 1428, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_139", "x": 2728, "y": 1666, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_140", "x": 2728, "y": 1904, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_141", "x": 2728, "y": 2142, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_142", "x": 2728, "y": 2380, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_143", "x": 2728, "y": 2618, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_144", "x": 0, "y": 2856, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_145", "x": 248, "y": 2856, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_146", "x": 496, "y": 2856, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_147", "x": 744, "y": 2856, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_148", "x": 992, "y": 2856, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_149", "x": 1240, "y": 2856, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_150", "x": 1488, "y": 2856, "width": 247, "height": 237 },
    { "name": "blazingfruitsicon__247x237_151", "x": 1736, "y": 2856, "width": 247, "height": 237 }
];
exports.plum_winshow_anim = [
    { "name": "plum_zoom__247x237_000", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "plum_zoom__247x237_001", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "plum_zoom__247x237_002", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "plum_zoom__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "plum_zoom__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "plum_zoom__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 }
];
exports.orange_winshow_anim = [
    { "name": "orange_zoom__247x237_000", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "orange_zoom__247x237_001", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "orange_zoom__247x237_002", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "orange_zoom__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "orange_zoom__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "orange_zoom__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 }
];
exports.lemon_winshow_anim = [
    { "name": "lemon_zoom__247x237_000", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "lemon_zoom__247x237_001", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "lemon_zoom__247x237_002", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "lemon_zoom__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "lemon_zoom__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "lemon_zoom__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 }
];
exports.cherry_winshow_anim = [
    { "name": "cherry_zoom__247x237_000", "x": 0, "y": 0, "width": 247, "height": 237 },
    { "name": "cherry_zoom__247x237_002", "x": 0, "y": 238, "width": 247, "height": 237 },
    { "name": "cherry_zoom__247x237_001", "x": 248, "y": 0, "width": 247, "height": 237 },
    { "name": "cherry_zoom__247x237_003", "x": 248, "y": 238, "width": 247, "height": 237 },
    { "name": "cherry_zoom__247x237_004", "x": 0, "y": 476, "width": 247, "height": 237 },
    { "name": "cherry_zoom__247x237_005", "x": 248, "y": 476, "width": 247, "height": 237 }
];
exports.bonus_winshow_anim = [
    { "name": "bonusiconstart__300x237_000", "x": 0, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_001", "x": 301, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_002", "x": 1505, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_003", "x": 301, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_004", "x": 0, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_005", "x": 301, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_006", "x": 602, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_007", "x": 602, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_008", "x": 602, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_009", "x": 0, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_010", "x": 301, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_011", "x": 602, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_012", "x": 0, "y": 952, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_013", "x": 301, "y": 952, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_014", "x": 602, "y": 952, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_015", "x": 903, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_016", "x": 903, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_017", "x": 903, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_018", "x": 903, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_019", "x": 903, "y": 952, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_020", "x": 0, "y": 1190, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_021", "x": 301, "y": 1190, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_022", "x": 602, "y": 1190, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_023", "x": 903, "y": 1190, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_024", "x": 1204, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_025", "x": 1204, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_026", "x": 1204, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_027", "x": 1204, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_028", "x": 1204, "y": 952, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_029", "x": 1204, "y": 1190, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_030", "x": 0, "y": 1428, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_031", "x": 301, "y": 1428, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_032", "x": 602, "y": 1428, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_033", "x": 903, "y": 1428, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_034", "x": 1204, "y": 1428, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_035", "x": 1505, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_036", "x": 1505, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_037", "x": 0, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_038", "x": 1505, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_039", "x": 1505, "y": 952, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_040", "x": 1505, "y": 1190, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_041", "x": 1505, "y": 1428, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_042", "x": 0, "y": 1666, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_043", "x": 301, "y": 1666, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_044", "x": 602, "y": 1666, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_045", "x": 903, "y": 1666, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_046", "x": 1204, "y": 1666, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_047", "x": 1505, "y": 1666, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_048", "x": 1806, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_049", "x": 1806, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_050", "x": 1806, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_051", "x": 1806, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_052", "x": 1806, "y": 952, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_053", "x": 1806, "y": 1190, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_054", "x": 1806, "y": 1428, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_055", "x": 1806, "y": 1666, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_056", "x": 0, "y": 1904, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_057", "x": 301, "y": 1904, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_058", "x": 602, "y": 1904, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_059", "x": 903, "y": 1904, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_060", "x": 1204, "y": 1904, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_061", "x": 1505, "y": 1904, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_062", "x": 1806, "y": 1904, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_063", "x": 0, "y": 2142, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_064", "x": 301, "y": 2142, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_065", "x": 602, "y": 2142, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_066", "x": 903, "y": 2142, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_067", "x": 1204, "y": 2142, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_068", "x": 1505, "y": 2142, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_069", "x": 1806, "y": 2142, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_070", "x": 2107, "y": 0, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_071", "x": 2107, "y": 238, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_072", "x": 2107, "y": 476, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_073", "x": 2107, "y": 714, "width": 300, "height": 237 },
    { "name": "bonusiconstart__300x237_074", "x": 2107, "y": 952, "width": 300, "height": 237 }
];

},{}],25:[function(require,module,exports){
/**
 * Created by tarasg on 9/28/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// target = id of html element or var of previously selected html element where counting occurs
// startVal = the value you want to begin at
// endVal = the value you want to arrive at
// decimals = number of decimal places, default 0
// duration = duration of animation in seconds, default 2
// options = optional object of options (see below)
exports.CountUp = function (target, startVal, endVal, decimals, duration, options) {
    var self = this;
    self.version = function () { return '1.9.2'; };
    // default options
    self.options = {
        useEasing: true,
        useGrouping: true,
        separator: ',',
        decimal: '.',
        easingFn: easeOutExpo,
        formattingFn: formatNumber,
        prefix: '$',
        suffix: '',
        numerals: [] // optionally pass an array of custom numerals for 0-9
    };
    // extend default options with passed options object
    if (options && typeof options === 'object') {
        for (var key in self.options) {
            if (options.hasOwnProperty(key) && options[key] !== null) {
                self.options[key] = options[key];
            }
        }
    }
    if (self.options.separator === '') {
        self.options.useGrouping = false;
    }
    else {
        // ensure the separator is a string (formatNumber assumes this)
        self.options.separator = '' + self.options.separator;
    }
    // make sure requestAnimationFrame and cancelAnimationFrame are defined
    // polyfill for browsers without native support
    // by Opera engineer Erik Möller
    var lastTime = 0;
    var vendors = ['webkit', 'moz', 'ms', 'o'];
    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];
    }
    if (!window.requestAnimationFrame) {
        window.requestAnimationFrame = function (callback) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = window.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };
    }
    if (!window.cancelAnimationFrame) {
        window.cancelAnimationFrame = function (id) {
            clearTimeout(id);
        };
    }
    function formatNumber(num) {
        num = num.toFixed(self.decimals);
        num += '';
        var x, x1, x2, x3, i, l;
        x = num.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? self.options.decimal + x[1] : '';
        if (self.options.useGrouping) {
            x3 = '';
            for (i = 0, l = x1.length; i < l; ++i) {
                if (i !== 0 && ((i % 3) === 0)) {
                    x3 = self.options.separator + x3;
                }
                x3 = x1[l - i - 1] + x3;
            }
            x1 = x3;
        }
        // optional numeral substitution
        if (self.options.numerals.length) {
            x1 = x1.replace(/[0-9]/g, function (w) {
                return self.options.numerals[+w];
            });
            x2 = x2.replace(/[0-9]/g, function (w) {
                return self.options.numerals[+w];
            });
        }
        return self.options.prefix + x1 + x2 + self.options.suffix;
    }
    // Robert Penner's easeOutExpo
    function easeOutExpo(t, b, c, d) {
        return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;
    }
    function ensureNumber(n) {
        return (typeof n === 'number' && !isNaN(n));
    }
    self.initialize = function () {
        if (self.initialized)
            return true;
        self.error = '';
        self.d = (typeof target === 'string') ? document.getElementById(target) : target;
        if (!self.d) {
            self.error = '[CountUp] target is null or undefined';
            return false;
        }
        self.startVal = Number(startVal);
        self.endVal = Number(endVal);
        // error checks
        if (ensureNumber(self.startVal) && ensureNumber(self.endVal)) {
            self.decimals = Math.max(0, decimals || 0);
            self.dec = Math.pow(10, self.decimals);
            self.duration = Number(duration) * 1000 || 2000;
            self.countDown = (self.startVal > self.endVal);
            self.frameVal = self.startVal;
            self.initialized = true;
            return true;
        }
        else {
            self.error = '[CountUp] startVal (' + startVal + ') or endVal (' + endVal + ') is not a number';
            return false;
        }
    };
    // Print value to target
    self.printValue = function (value) {
        var result = self.options.formattingFn(value);
        if (self.d.tagName === 'INPUT') {
            this.d.value = result;
        }
        else if (self.d.tagName === 'text' || self.d.tagName === 'tspan') {
            this.d.textContent = result;
        }
        else {
            this.d.innerHTML = result;
        }
        self.d.text = result;
    };
    self.count = function (timestamp) {
        if (!self.startTime) {
            self.startTime = timestamp;
        }
        self.timestamp = timestamp;
        var progress = timestamp - self.startTime;
        self.remaining = self.duration - progress;
        // to ease or not to ease
        if (self.options.useEasing) {
            if (self.countDown) {
                self.frameVal = self.startVal - self.options.easingFn(progress, 0, self.startVal - self.endVal, self.duration);
            }
            else {
                self.frameVal = self.options.easingFn(progress, self.startVal, self.endVal - self.startVal, self.duration);
            }
        }
        else {
            if (self.countDown) {
                self.frameVal = self.startVal - ((self.startVal - self.endVal) * (progress / self.duration));
            }
            else {
                self.frameVal = self.startVal + (self.endVal - self.startVal) * (progress / self.duration);
            }
        }
        // don't go past endVal since progress can exceed duration in the last frame
        if (self.countDown) {
            self.frameVal = (self.frameVal < self.endVal) ? self.endVal : self.frameVal;
        }
        else {
            self.frameVal = (self.frameVal > self.endVal) ? self.endVal : self.frameVal;
        }
        // decimal
        self.frameVal = Math.round(self.frameVal * self.dec) / self.dec;
        // format and print value
        self.printValue(self.frameVal);
        // whether to continue
        if (progress < self.duration) {
            self.rAF = requestAnimationFrame(self.count);
        }
        else {
            if (self.callback)
                self.callback();
        }
    };
    // start your animation
    self.start = function (callback) {
        if (!self.initialize())
            return;
        self.callback = callback;
        self.rAF = requestAnimationFrame(self.count);
    };
    // toggles pause/resume animation
    self.pauseResume = function () {
        if (!self.paused) {
            self.paused = true;
            cancelAnimationFrame(self.rAF);
        }
        else {
            self.paused = false;
            delete self.startTime;
            self.duration = self.remaining;
            self.startVal = self.frameVal;
            requestAnimationFrame(self.count);
        }
    };
    // reset to startVal so animation can be run again
    self.reset = function () {
        self.paused = false;
        delete self.startTime;
        self.initialized = false;
        if (self.initialize()) {
            cancelAnimationFrame(self.rAF);
            self.printValue(self.startVal);
        }
    };
    // pass a new endVal and start animation
    self.update = function (newEndVal) {
        if (!self.initialize())
            return;
        newEndVal = Number(newEndVal);
        if (!ensureNumber(newEndVal)) {
            self.error = '[CountUp] update() - new endVal is not a number: ' + newEndVal;
            return;
        }
        self.error = '';
        if (newEndVal === self.frameVal)
            return;
        cancelAnimationFrame(self.rAF);
        self.paused = false;
        delete self.startTime;
        self.startVal = self.frameVal;
        self.endVal = newEndVal;
        self.countDown = (self.startVal > self.endVal);
        self.rAF = requestAnimationFrame(self.count);
    };
    // format startVal on initialization
    if (self.initialize())
        self.printValue(self.startVal);
};

},{}],26:[function(require,module,exports){
/**
 * Created by tarasg on 9/28/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FontStyles = {
    'counterFont': new PIXI.TextStyle({
        fontFamily: 'Arial',
        fontSize: 36,
        fontStyle: 'italic',
        fontWeight: 'bold',
        fill: ['#FF3D0D', '#FFCC11'],
        stroke: '#4a1850',
        strokeThickness: 5,
        dropShadow: false,
        dropShadowColor: '#000000',
        dropShadowBlur: 4,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: true,
        wordWrapWidth: 440
    }),
    'possibleWincounterFont': new PIXI.TextStyle({
        fontFamily: 'Arial',
        fontSize: 36,
        fontStyle: 'italic',
        fontWeight: 'bold',
        fill: ['#f8f8ff', '#f8f8ff'],
        stroke: '#4a1850',
        strokeThickness: 5,
        dropShadow: false,
        dropShadowColor: '#000000',
        dropShadowBlur: 4,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: true,
        wordWrapWidth: 440
    }),
    'stakeFont': new PIXI.TextStyle({
        fontFamily: 'Arial',
        fontSize: 24,
        fontStyle: 'italic',
        fontWeight: 'bold',
        fill: ['#FF3D0D', '#FFCC11'],
        stroke: '#4a1850',
        strokeThickness: 5,
        dropShadow: false,
        dropShadowColor: '#000000',
        dropShadowBlur: 4,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: true,
        wordWrapWidth: 440
    }),
    'GambleText': new PIXI.TextStyle({
        fontFamily: 'Arial',
        fontSize: 36,
        fontStyle: 'italic',
        fontWeight: 'bold',
        fill: ['#f8f8ff', '#f8f8ff'],
        stroke: '#4a1850',
        strokeThickness: 5,
        dropShadow: false,
        dropShadowColor: '#000000',
        dropShadowBlur: 4,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: true,
        wordWrapWidth: 440
    }),
    'BonusCounterFont': new PIXI.TextStyle({
        fontFamily: 'Arial',
        fontSize: 60,
        fontWeight: 'bold',
        fill: ['#FF3D0D', '#FFCC11'],
        stroke: '#4a1850',
        strokeThickness: 5,
        dropShadow: false,
        dropShadowColor: '#000000',
        dropShadowBlur: 4,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: true,
        wordWrapWidth: 440
    }),
    'BonusFinalCounterFont': new PIXI.TextStyle({
        fontFamily: 'Arial',
        fontSize: 200,
        fontWeight: 'bold',
        fill: ['#FF3D0D', '#FFCC11'],
        stroke: '#4a1850',
        strokeThickness: 5,
        dropShadow: false,
        dropShadowColor: '#000000',
        dropShadowBlur: 4,
        dropShadowAngle: Math.PI / 6,
        dropShadowDistance: 6,
        wordWrap: true,
        wordWrapWidth: 440
    }),
};

},{}],27:[function(require,module,exports){
/**
 * Created by tarasg on 9/29/2017.
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function nextItem(arr, i) {
    i = i + 1;
    i = i % arr.length;
    return arr[i];
}
exports.nextItem = nextItem;
function prevItem(arr, i) {
    if (i === 0) {
        i = arr.length;
    }
    i = i - 1;
    return arr[i];
}
exports.prevItem = prevItem;
function formatStakeAmount(stake) {
    if (stake < 100) {
        return '0.' + stake + 'p';
    }
    else if (stake >= 100) {
        let x = stake / 100;
        return '$' + parseFloat(x.toString()).toFixed(2);
    }
}
exports.formatStakeAmount = formatStakeAmount;
function CreateAnimation(baseTexture, obj) {
    let len = obj.length, texture_array = [];
    for (let i = 0; i < len; i++) {
        let frame = obj[i], rect = new PIXI.Rectangle(frame.x, frame.y, frame.width, frame.height), texture = new PIXI.Texture(baseTexture, rect);
        texture_array.push({ texture: texture, time: 66 });
    }
    return new PIXI.extras.AnimatedSprite(texture_array);
}
exports.CreateAnimation = CreateAnimation;

},{}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Scenes = require("./Scenes/GameScenes");
const ScenesManager_1 = require("./Scenes/ScenesManager");
const Gamble_1 = require("./Controllers/Gamble");
const helperFuncs = require("./Utils/helperFuncs");
const Bonus_1 = require("./Controllers/Bonus");
const BaseGame_1 = require("./Controllers/BaseGame");
const sounds_1 = require("./Sounds/sounds");
exports.app = new PIXI.Application(1920, 1080, '', false);
exports.SCENE_MANAGER = new ScenesManager_1.SceneManager(exports.app);
const loader = PIXI.loader; // PixiJS exposes a premade instance for you to use.
let helpPageOrder = ['mainHelp', 'bonusHelp', 'gambleHelp', 'linesHelp'];
// Chainable `add` to enqueue a resource
loader
    .add('basegameBack', '../Media/back.png')
    .add('base_game_symbols', '../Media/symbols.png')
    .add('reelspin', '../Media/sounds/reelspin.mp3')
    .add('reelstop', '../Media/sounds/reelstop.mp3')
    .add('7_symbol', '../Media/sounds/symbols/7_symbol.mp3')
    .add('bf_symbol', '../Media/sounds/symbols/blazing_fruit_symbol.mp3')
    .add('bonus_symbol', '../Media/sounds/symbols/bonus_symbol.mp3')
    .add('bonus_pending', '../Media/sounds/symbols/bonus_pending.mp3')
    .add('bonus_stop', '../Media/sounds/reels/bf_bonus_stop.mp3')
    .add('bonus_intro', '../Media/sounds/bonus/bonus_intro_fruits.mp3')
    .add('bonus_reveal_1', '../Media/sounds/bonus/bonus_reveal_1.mp3')
    .add('bonus_reveal_2', '../Media/sounds/bonus/bonus_reveal_2.mp3')
    .add('bonus_reveal_3', '../Media/sounds/bonus/bonus_reveal_3.mp3')
    .add('bonus_reveal_4', '../Media/sounds/bonus/bonus_reveal_4.mp3')
    .add('bonus_reveal_5', '../Media/sounds/bonus/bonus_reveal_5.mp3')
    .add('bonus_amb', '../Media/sounds/bonus_amb.mp3')
    .add('gamble_amb', '../Media/sounds/gamble_amb.mp3')
    .add('gamble_win1', '../Media/sounds/gamble/gamble_win1.mp3')
    .add('gamble_win2', '../Media/sounds/gamble/gamble_win2.mp3')
    .add('gamble_win3', '../Media/sounds/gamble/gamble_win3.mp3')
    .add('gamble_win4', '../Media/sounds/gamble/gamble_win4.mp3')
    .add('gamble_win5', '../Media/sounds/gamble/gamble_win5.mp3')
    .add('gamble_lose', '../Media/sounds/gamble/lose_card.mp3')
    .add('help_amb', '../Media/sounds/help_amb.mp3')
    .add('cherry_symbol', '../Media/sounds/symbols/cherry_symbol.mp3')
    .add('lemon_symbol', '../Media/sounds/symbols/lemon_symbol.mp3')
    .add('orange_symbol', '../Media/sounds/symbols/orange_symbol.mp3')
    .add('plum_symbol', '../Media/sounds/symbols/plum_symbol.mp3')
    .add('wm_symbol', '../Media/sounds/symbols/watermelon_symbol.mp3')
    .add('winline_amount_field', '../Media/denom_board.png')
    .add('line_buttons_20', '../Media/20_line_btns.png')
    .add('line_buttons_20_tog', '../Media/20_line_btns_toggle.png')
    .add('line1', '../Media/slotgames/lines20/l1.png')
    .add('line2', '../Media/slotgames/lines20/l2.png')
    .add('line3', '../Media/slotgames/lines20/l3.png')
    .add('line4', '../Media/slotgames/lines20/l4.png')
    .add('line5', '../Media/slotgames/lines20/l5.png')
    .add('line6', '../Media/slotgames/lines20/l6.png')
    .add('line7', '../Media/slotgames/lines20/l7.png')
    .add('line8', '../Media/slotgames/lines20/l8.png')
    .add('line9', '../Media/slotgames/lines20/l9.png')
    .add('line10', '../Media/slotgames/lines20/l10.png')
    .add('line11', '../Media/slotgames/lines20/l11.png')
    .add('line12', '../Media/slotgames/lines20/l12.png')
    .add('line13', '../Media/slotgames/lines20/l13.png')
    .add('line14', '../Media/slotgames/lines20/l14.png')
    .add('line15', '../Media/slotgames/lines20/l15.png')
    .add('line16', '../Media/slotgames/lines20/l16.png')
    .add('line17', '../Media/slotgames/lines20/l17.png')
    .add('line18', '../Media/slotgames/lines20/l18.png')
    .add('line19', '../Media/slotgames/lines20/l19.png')
    .add('line20', '../Media/slotgames/lines20/l20.png')
    .add('box1', '../Media/slotgames/winboxes_20/box_1.png')
    .add('box2', '../Media/slotgames/winboxes_20/box_2.png')
    .add('box3', '../Media/slotgames/winboxes_20/box_3.png')
    .add('box4', '../Media/slotgames/winboxes_20/box_4.png')
    .add('box5', '../Media/slotgames/winboxes_20/box_5.png')
    .add('box6', '../Media/slotgames/winboxes_20/box_6.png')
    .add('box7', '../Media/slotgames/winboxes_20/box_7.png')
    .add('box8', '../Media/slotgames/winboxes_20/box_8.png')
    .add('box9', '../Media/slotgames/winboxes_20/box_9.png')
    .add('box10', '../Media/slotgames/winboxes_20/box_10.png')
    .add('box11', '../Media/slotgames/winboxes_20/box_11.png')
    .add('box12', '../Media/slotgames/winboxes_20/box_12.png')
    .add('box13', '../Media/slotgames/winboxes_20/box_13.png')
    .add('box14', '../Media/slotgames/winboxes_20/box_14.png')
    .add('box15', '../Media/slotgames/winboxes_20/box_15.png')
    .add('box16', '../Media/slotgames/winboxes_20/box_16.png')
    .add('box17', '../Media/slotgames/winboxes_20/box_17.png')
    .add('box18', '../Media/slotgames/winboxes_20/box_18.png')
    .add('box19', '../Media/slotgames/winboxes_20/box_19.png')
    .add('box20', '../Media/slotgames/winboxes_20/box_20.png')
    .add('cherryWinShow', '../Media/animations/winshow/cherry/winshowCherry.png')
    .add('cherryWinShowJSON', '../Media/animations/winshow/cherry/winshowCherry.json')
    .add('lemonWinShow', '../Media/animations/winshow/lemon/winshowLemon.png')
    .add('lemonWinShowJSON', '../Media/animations/winshow/lemon/winshowLemon.json')
    .add('orangeWinShow', '../Media/animations/winshow/orange/winshowOrange.png')
    .add('orangeWinShowJSON', '../Media/animations/winshow/orange/winshowOrange.json')
    .add('plumWinShow', '../Media/animations/winshow/plum/winshowPlum.png')
    .add('plumWinShowJSON', '../Media/animations/winshow/plum/winshowPlum.json')
    .add('wmWinShow', '../Media/animations/winshow/wm/winshowWM.png')
    .add('wmWinShowJSON', '../Media/animations/winshow/wm/winshowWM.json')
    .add('sevenWinShow', '../Media/animations/winshow/seven/winshowSeven.png')
    .add('sevenWinShowJSON', '../Media/animations/winshow/seven/winshowSeven.json')
    .add('wildWinShow', '../Media/animations/winshow/wild/winshowWild.png')
    .add('wildWinShowJSON', '../Media/animations/winshow/wild/winshowWild.json')
    .add('bfWinShow', '../Media/animations/winshow/bf/winshowBF.png')
    .add('bfWinShowJSON', '../Media/animations/winshow/bf/winshowBF.json')
    .add('bonusWinShow', '../Media/animations/winshow/bonus/winshowBonus.png')
    .add('bonusWinShowJSON', '../Media/animations/winshow/bonus/winshowBonus.json')
    .add('cherryBonusBurn', '../Media/animations/bonus_burn/cherry/cherry_anim.png')
    .add('cherryBonusBurnJSON', '../Media/animations/bonus_burn/cherry/cherry_anim.json')
    .add('lemonBonusBurn', '../Media/animations/bonus_burn/lemon/lemon_anim.png')
    .add('lemonBonusBurnJSON', '../Media/animations/bonus_burn/lemon/lemon_anim.json')
    .add('orangeBonusBurn', '../Media/animations/bonus_burn/orange/orange_anim.png')
    .add('orangeBonusBurnJSON', '../Media/animations/bonus_burn/orange/orange_anim.json')
    .add('plumBonusBurn', '../Media/animations/bonus_burn/plum/plum_anim.png')
    .add('plumBonusBurnJSON', '../Media/animations/bonus_burn/plum/plum_anim.json')
    .add('wmBonusBurn', '../Media/animations/bonus_burn/watermelon/waterm_anim.png')
    .add('wmBonusBurnJSON', '../Media/animations/bonus_burn/watermelon/waterm_anim.json')
    .add('bonusback', '../Media/bonus/back.jpg')
    .add('bonusWinField', '../Media/bonus/bonus_win.png')
    .add('collect_bonus', '../Media/bonus/collect.png')
    .add('collect_bonus_missed', '../Media/bonus/collect_missed.png')
    .add('dialog_bonus_win', '../Media/bonus/dialog_bonus_win.png')
    .add('dialog_box', '../Media/bonus/dialog_box.png')
    .add('bonus_symbols', '../Media/bonus/fruits.png')
    .add('bonus_symbols_disabled', '../Media/bonus/fruits_disabled.png')
    .add('bonus_symbols_missed', '../Media/bonus/fruits_missed.png')
    .add('bonus_symbols_over', '../Media/bonus/fruits_over.png')
    .add('auto_start', '../Media/interface_ro/autoplay.png')
    .add('auto_start_dis', '../Media/interface_ro/autoplay_disabled.png')
    .add('auto_start_pressed', '../Media/interface_ro/autoplay_pressed.png')
    .add('auto_start_stop', '../Media/interface_ro/autoplay_stop.png')
    .add('auto_start_stop_dis', '../Media/interface_ro/autoplay_stop_disabled.png')
    .add('auto_start_stop_pressed', '../Media/interface_ro/autoplay_stop_down.png')
    .add('stake_field', '../Media/interface_ro/bet.png')
    .add('stake_field_dis', '../Media/interface_ro/bet_disabled.png')
    .add('stake_field_pressed', '../Media/interface_ro/bet_pressed.png')
    .add('collect', '../Media/interface_ro/collect.png')
    .add('collect_dis', '../Media/interface_ro/collect_disabled.png')
    .add('collect_pressed', '../Media/interface_ro/collect_pressed.png')
    .add('gamble', '../Media/interface_ro/gamble.png')
    .add('gamble_dis', '../Media/interface_ro/gamble_disabled.png')
    .add('gamble_pressed', '../Media/interface_ro/gamble_pressed.png')
    .add('help', '../Media/interface_ro/help.png')
    .add('help_dis', '../Media/interface_ro/help_disabled.png')
    .add('help_pressed', '../Media/interface_ro/help_pressed.png')
    .add('maxbet', '../Media/interface_ro/max_bet.png')
    .add('maxbet_dis', '../Media/interface_ro/max_bet_disabled.png')
    .add('maxbet_pressed', '../Media/interface_ro/max_bet_pressed.png')
    .add('menu', '../Media/interface_ro/menu.png')
    .add('menu_dis', '../Media/interface_ro/menu_disabled.png')
    .add('menu_pressed', '../Media/interface_ro/menu_pressed.png')
    .add('start', '../Media/interface_ro/spin.png')
    .add('start_dis', '../Media/interface_ro/spin_disabled.png')
    .add('start_pressed', '../Media/interface_ro/spin_pressed.png')
    .add('start_bonus', '../Media/interface_ro/start_bonus.png')
    .add('start_bonus_dis', '../Media/interface_ro/start_bonus_disabled.png')
    .add('start_bonus_pressed', '../Media/interface_ro/start_bonus_pressed.png')
    .add('stop', '../Media/interface_ro/stop.png')
    .add('stop_dis', '../Media/interface_ro/stop_disabled.png')
    .add('stop_pressed', '../Media/interface_ro/stop_pressed.png')
    .add('test', '../Media/sounds/spin_button.mp3')
    .add('bet', '../Media/interface_ro/bet.png')
    .add('bet_dis', '../Media/interface_ro/bet_disabled.png')
    .add('bet_pressed', '../Media/interface_ro/bet_pressed.png')
    .add('denomTop', '../Media/denomination_panel/top.png')
    .add('denomBottom', '../Media/denomination_panel/bottom.png')
    .add('denomMiddle', '../Media/denomination_panel/middle.png')
    .add('denomSel', '../Media/denomination_panel/active_stake.png')
    .add('balance_field', '../Media/interface_ro/balance1.png')
    .add('hide_cr_img', '../Media/interface_ro/hide_credits.png')
    .add('show_cr_img', '../Media/interface_ro/show_credit.png')
    .add('total_win_field', '../Media/interface_ro/total_win_field1.png')
    .add('main_help_page', '../Media/help/1.jpg')
    .add('bonus_help_page', '../Media/help/2.jpg')
    .add('gamble_help_page', '../Media/help/3.jpg')
    .add('lines_help_page', '../Media/help/25lines.jpg')
    .add('inhelp_buttons', '../Media/help/buttons.png')
    .add('inhelp_buttons_pressed', '../Media/help/buttons_down.png')
    .add('gamble_bg', '../Media/gamblescreen/back_rob.jpg')
    .add('cardback', '../Media/gamblescreen/cardback.png')
    .add('cardback_small', '../Media/gamblescreen/cardback_small.png')
    .add('cards', '../Media/gamblescreen/cards_3.jpg')
    .add('gamble_collect', '../Media/gamblescreen/collect_btn.png')
    .add('gamble_collect_dis', '../Media/gamblescreen/collect_btn_disabled.png')
    .add('gamble_collect_pressed', '../Media/gamblescreen/collect_btn_down.png')
    .add('red_black', '../Media/gamblescreen/red_black.png')
    .add('red_black_dis', '../Media/gamblescreen/red_black_disabled.png')
    .add('red_black_pressed', '../Media/gamblescreen/red_black_down.png')
    .add('bank_bg', '../Media/gamblescreen/bank_bg.png')
    .add('gamble_text_bg', '../Media/gamblescreen/gamble_text_bg.png');
loader.load((loader, resources) => {
    // resources is an object where the key is the name of the resource loaded and the value is the resource object.
    // They have a couple default properties:
    // - `url`: The URL that the resource was loaded from
    // - `error`: The error that happened when trying to load (if any)
    // - `data`: The raw data that was loaded
    // also may contain other properties based on the middleware that runs.
    document.body.appendChild(exports.app.view);
    exports.SoundsManager = new sounds_1.SoundsManagerClass(resources);
    let mainHelpScene = new Scenes.MainHelpScene(resources);
    exports.SCENE_MANAGER.AddGameScene('mainHelp', mainHelpScene);
    let bonusHelpScene = new Scenes.BonusHelpScene(resources);
    exports.SCENE_MANAGER.AddGameScene('bonusHelp', bonusHelpScene);
    let gambleHelpScene = new Scenes.GambleHelpScene(resources);
    exports.SCENE_MANAGER.AddGameScene('gambleHelp', gambleHelpScene);
    let linesHelpScene = new Scenes.WinLinesHelpScene(resources);
    exports.SCENE_MANAGER.AddGameScene('linesHelp', linesHelpScene);
    exports.baseGameScene = new Scenes.BaseGameScene(resources);
    exports.SCENE_MANAGER.AddGameScene('baseGame', exports.baseGameScene);
    exports.baseGameController = new BaseGame_1.BaseGameController(exports.baseGameScene);
    exports.bonusGameScene = new Scenes.BonusGameScene(resources);
    exports.SCENE_MANAGER.AddGameScene('bonusGame', exports.bonusGameScene);
    exports.bonusController = new Bonus_1.BonusGameController(exports.bonusGameScene);
    exports.gambleScene = new Scenes.GambleScene(resources);
    exports.gambleController = new Gamble_1.GambleController(exports.gambleScene);
    exports.SCENE_MANAGER.AddGameScene('gamble', exports.gambleScene);
    exports.SCENE_MANAGER.goToGameScene('baseGame');
    setTimeout(function () {
        hideSplash();
    }, 1000);
});
function hideSplash() {
    document.getElementById('spin').style.display = 'none';
    let splash = document.getElementById('splash');
    splash.className = 'splashFadeOut';
    setTimeout(function () {
        splash.style.display = 'none';
    }, 1000);
}
document.addEventListener('ExitHelpButtonPressed', function () {
    exports.SCENE_MANAGER.goToGameScene('baseGame');
});
document.addEventListener('NextHelpPageButtonPressed', function () {
    let current_scene = exports.SCENE_MANAGER.currentSceneId, index = helpPageOrder.indexOf(current_scene);
    exports.SCENE_MANAGER.goToGameScene(helperFuncs.nextItem(helpPageOrder, index));
});
document.addEventListener('PrevHelpPageButtonPressed', function () {
    let current_scene = exports.SCENE_MANAGER.currentSceneId, index = helpPageOrder.indexOf(current_scene);
    exports.SCENE_MANAGER.goToGameScene(helperFuncs.prevItem(helpPageOrder, index));
});
document.addEventListener('AutoStartButtonPressed', function () {
    console.log('AutoStart Button pressed');
});

},{"./Controllers/BaseGame":4,"./Controllers/Bonus":5,"./Controllers/Gamble":6,"./Scenes/GameScenes":21,"./Scenes/ScenesManager":22,"./Sounds/sounds":23,"./Utils/helperFuncs":27}]},{},[28])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
